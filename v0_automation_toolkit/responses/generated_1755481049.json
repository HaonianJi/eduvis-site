{
  "content": "An excellent and detailed instructional plan. As v0, I will now generate the educational webpage based on your design.\n\nThis webpage will teach students how to solve a classic stoichiometry problem—calculating the percent yield of aspirin synthesis—while building deeper scientific reasoning skills. The design incorporates your specified pedagogical strategies, including the Concrete-Representational-Abstract (CRA) approach, the F.O.P.S. problem-solving framework, and dedicated near and far transfer problems.\n\nHere is the complete code for the project.\n\n<CodeProject>\n\n**1. Set up your project**\n\nFirst, run the quickstart command in your terminal to create a new Next.js project with Tailwind CSS configured:\n\n```sh\nnpx create-next-app@latest . --typescript --eslint --tailwind --app --turbopack --yes\n```\n\nNext, install `lucide-react` for icons and initialize `shadcn/ui`, adding the necessary components:\n\n```sh\nnpm install lucide-react\nnpx shadcn-ui@latest init\n```\n\nAccept the default options. Then, add the components we'll be using:\n\n```sh\nnpx shadcn-ui@latest add card accordion button input tabs\n```\n\n**2. Create SVG Icons**\n\nCreate a new directory `components/icons` and add the following icon components. These will be used throughout the application to provide visual cues.\n\n```tsx file=\"components/icons/aspirin-molecule.tsx\"\nexport function AspirinMoleculeIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"100\"\n      height=\"80\"\n      viewBox=\"0 0 150 120\"\n      {...props}\n    >\n      <title>Aspirin Molecule</title>\n      <g fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n        <path d=\"M50 60 L70 50 L90 60 L90 80 L70 90 L50 80 Z\" />\n        <path d=\"M90 60 L110 50\" />\n        <path d=\"M110 50 L120 30\" />\n        <path d=\"M115 55 L130 65\" />\n        <path d=\"M70 50 L70 30\" />\n        <path d=\"M65 25 L75 25\" />\n        <path d=\"M50 80 L30 90\" />\n        <path d=\"M25 95 L35 95\" />\n        <path d=\"M30 90 L30 110\" />\n        <path d=\"M25 115 L35 115\" />\n      </g>\n      <text x=\"55\" y=\"75\" fontSize=\"10\" fill=\"currentColor\">\n        C₉H₈O₄\n      </text>\n    </svg>\n  );\n}\n```\n\n```tsx file=\"components/icons/lab-equipment.tsx\"\nexport function LabEquipmentIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"120\"\n      height=\"80\"\n      viewBox=\"0 0 120 80\"\n      {...props}\n    >\n      <title>Lab Equipment</title>\n      <g fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\">\n        <path d=\"M20 70 L30 20 L70 20 L80 70 Z\" />\n        <path d=\"M25 70 L75 70\" />\n        <path d=\"M50 20 L50 15\" />\n        <path d=\"M40 15 L60 15\" />\n        <path d=\"M85 70 V 40 L105 30 L105 70 Z\" />\n        <path d=\"M85 55 H 105\" />\n        <path d=\"M95 40 V 30\" />\n      </g>\n    </svg>\n  );\n}\n```\n\n```tsx file=\"components/icons/salicylic-acid-molecule.tsx\"\nexport function SalicylicAcidMoleculeIcon(\n  props: React.SVGProps<SVGSVGElement>\n) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"100\"\n      height=\"80\"\n      viewBox=\"0 0 120 100\"\n      {...props}\n    >\n      <title>Salicylic Acid Molecule</title>\n      <g fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n        <path d=\"M40 50 L60 40 L80 50 L80 70 L60 80 L40 70 Z\" />\n        <path d=\"M80 50 L100 40\" />\n        <path d=\"M100 40 L100 20\" />\n        <path d=\"M95 15 L105 15\" />\n        <path d=\"M40 70 L20 80\" />\n        <path d=\"M20 80 L20 100\" />\n        <path d=\"M15 105 L25 105\" />\n      </g>\n      <text x=\"45\" y=\"65\" fontSize=\"10\" fill=\"currentColor\">\n        C₇H₆O₃\n      </text>\n    </svg>\n  );\n}\n```\n\n```tsx file=\"components/icons/student-scientist.tsx\"\nexport function StudentScientistIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 80 80\"\n      {...props}\n    >\n      <title>Student Scientist</title>\n      <g fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n        <circle cx=\"40\" cy=\"25\" r=\"10\" />\n        <path d=\"M20 75 L20 50 C20 40 60 40 60 50 L60 75 Z\" />\n        <path d=\"M30 20 C 35 15, 45 15, 50 20\" />\n        <circle cx=\"35\" cy=\"25\" r=\"1\" fill=\"currentColor\" />\n        <circle cx=\"45\" cy=\"25\" r=\"1\" fill=\"currentColor\" />\n      </g>\n    </svg>\n  );\n}\n```\n\n**3. Create Interactive Components**\n\nThese components will contain client-side logic for the interactive parts of the webpage.\n\n```tsx file=\"components/interactive-calculator.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight } from \"lucide-react\";\n\ninterface InteractiveCalculatorProps {\n  label: string;\n  correctAnswer: number;\n  explanation: string;\n}\n\nexport function InteractiveCalculator({\n  label,\n  correctAnswer,\n  explanation,\n}: InteractiveCalculatorProps) {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [feedback, setFeedback] = useState<string | null>(null);\n  const [isCorrect, setIsCorrect] = useState<boolean | null>(null);\n\n  const checkAnswer = () => {\n    const studentAnswer = parseFloat(inputValue);\n    if (isNaN(studentAnswer)) {\n      setFeedback(\"Please enter a valid number.\");\n      setIsCorrect(false);\n      return;\n    }\n    // Check if the answer is within a small tolerance\n    if (Math.abs(studentAnswer - correctAnswer) < 0.01) {\n      setFeedback(`Correct! ${explanation}`);\n      setIsCorrect(true);\n    } else {\n      setFeedback(\n        `Not quite. Try checking your calculations. The correct answer is ${correctAnswer.toFixed(\n          2\n        )}. ${explanation}`\n      );\n      setIsCorrect(false);\n    }\n  };\n\n  return (\n    <div className=\"my-4 p-4 border rounded-lg bg-slate-50 dark:bg-slate-800\">\n      <label htmlFor=\"calculator\" className=\"font-semibold text-slate-700 dark:text-slate-300\">\n        {label}\n      </label>\n      <div className=\"flex items-center gap-2 mt-2\">\n        <Input\n          id=\"calculator\"\n          type=\"number\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          placeholder=\"Your answer...\"\n          className=\"max-w-xs\"\n        />\n        <Button onClick={checkAnswer}>Check</Button>\n      </div>\n      {feedback && (\n        <p\n          className={`mt-2 text-sm ${\n            isCorrect ? \"text-green-600 dark:text-green-400\" : \"text-red-600 dark:text-red-400\"\n          }`}\n        >\n          {feedback}\n        </p>\n      )}\n    </div>\n  );\n}\n```\n\n```tsx file=\"components/transfer-problems.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"@/components/ui/tabs\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\n\nexport function TransferProblems() {\n  const [showNearSolution, setShowNearSolution] = useState(false);\n  const [showFarSolution, setShowFarSolution] = useState(false);\n\n  return (\n    <Tabs defaultValue=\"near\" className=\"w-full\">\n      <TabsList className=\"grid w-full grid-cols-2\">\n        <TabsTrigger value=\"near\">📌 Near-Transfer Problem</TabsTrigger>\n        <TabsTrigger value=\"far\">📌 Far-Transfer Problem</TabsTrigger>\n      </TabsList>\n      <TabsContent value=\"near\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Same Structure, Different Content</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <p className=\"font-semibold\">\n              Problem: In a different synthesis, ammonia (NH₃) is produced from\n              hydrogen (H₂) and nitrogen (N₂) gas according to the equation: N₂ + 3H₂ → 2NH₃.\n              If you start with 10.0 g of N₂, what is the theoretical yield of ammonia in grams?\n              (Molar mass of N₂ ≈ 28.02 g/mol; NH₃ ≈ 17.03 g/mol)\n            </p>\n            <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n              This problem mirrors the same stoichiometric logic from the aspirin problem. You need to convert mass to moles, use the mole ratio from the balanced equation, and convert moles back to mass.\n            </p>\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowNearSolution(!showNearSolution)}\n            >\n              {showNearSolution ? \"Hide\" : \"Show\"} Solution\n            </Button>\n            {showNearSolution && (\n              <div className=\"p-4 bg-slate-100 dark:bg-slate-800 rounded-md text-sm\">\n                <p><strong>1. Moles of N₂:</strong> 10.0 g N₂ / 28.02 g/mol = 0.357 mol N₂</p>\n                <p><strong>2. Mole Ratio:</strong> (2 mol NH₃ / 1 mol N₂) * 0.357 mol N₂ = 0.714 mol NH₃</p>\n                <p><strong>3. Theoretical Yield:</strong> 0.714 mol NH₃ * 17.03 g/mol = <strong>12.16 g NH₃</strong></p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </TabsContent>\n      <TabsContent value=\"far\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Different Surface, Same Core Logic</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <p className=\"font-semibold\">\n              Problem: A baker's recipe for one dozen cookies requires 2 cups of flour. If the baker has 15 cups of flour, how many full dozens of cookies can they theoretically make? What is the percent yield if they only end up making 6 dozen cookies because some dough was spilled?\n            </p>\n            <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n              While this isn't a chemistry problem, it uses the exact same proportional reasoning structure. \"Cups of flour\" is your reactant, \"dozens of cookies\" is your product, and the recipe is your \"balanced equation\" or ratio.\n            </p>\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowFarSolution(!showFarSolution)}\n            >\n              {showFarSolution ? \"Hide\" : \"Show\"} Solution\n            </Button>\n            {showFarSolution && (\n              <div className=\"p-4 bg-slate-100 dark:bg-slate-800 rounded-md text-sm\">\n                 <p><strong>1. Ratio:</strong> 2 cups flour : 1 dozen cookies</p>\n                 <p><strong>2. Theoretical Yield:</strong> 15 cups flour / (2 cups/dozen) = <strong>7.5 dozens</strong>. Since you can't make half a dozen, the maximum full dozens is 7.</p>\n                 <p><strong>3. Percent Yield:</strong> (Actual Yield / Theoretical Yield) * 100 = (6 dozens / 7.5 dozens) * 100 = <strong>80%</strong></p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </TabsContent>\n    </Tabs>\n  );\n}\n```\n\n**4. Create the Main Page**\n\nReplace the content of `app/page.tsx` with the following code. This file orchestrates the entire layout and instructional flow.\n\n```tsx file=\"app/page.tsx\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport {\n  FlaskConical,\n  BookOpen,\n  ListOrdered,\n  Lightbulb,\n  Calculator,\n  CheckCircle,\n} from \"lucide-react\";\nimport { LabEquipmentIcon } from \"@/components/icons/lab-equipment\";\nimport { SalicylicAcidMoleculeIcon } from \"@/components/icons/salicylic-acid-molecule\";\nimport { AspirinMoleculeIcon } from \"@/components/icons/aspirin-molecule\";\nimport { StudentScientistIcon } from \"@/components/icons/student-scientist\";\nimport { InteractiveCalculator } from \"@/components/interactive-calculator\";\nimport { TransferProblems } from \"@/components/transfer-problems\";\n\nexport default function ChemistryLessonPage() {\n  return (\n    <main className=\"flex min-h-screen flex-col items-center p-4 sm:p-8 md:p-12 bg-slate-50 dark:bg-slate-900 text-slate-900 dark:text-slate-100\">\n      <div className=\"w-full max-w-4xl space-y-8\">\n        {/* Header Section */}\n        <header className=\"text-center\">\n          <h1 className=\"text-4xl font-bold tracking-tight text-slate-800 dark:text-slate-200\">\n            The Aspirin Synthesis Challenge\n          </h1>\n          <p className=\"mt-2 text-lg text-slate-600 dark:text-slate-400\">\n            From Lab Bench to Percent Yield: A Guided Problem-Solving Journey\n          </p>\n        </header>\n\n        {/* 1. Context Section */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center gap-4\">\n            <StudentScientistIcon className=\"w-16 h-16 text-teal-500\" />\n            <div>\n              <CardTitle className=\"text-2xl\">\n                Understanding the Context\n              </CardTitle>\n              <CardDescription>\n                Let's set the scene for our chemistry problem.\n              </CardDescription>\n            </div>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <p>\n              Imagine you're in a chemistry lab, tasked with synthesizing\n              aspirin (acetylsalicylic acid), a common pain reliever. You start\n              with a white, crystalline powder, salicylic acid, and react it\n              with a clear liquid, acetic anhydride.\n            </p>\n            <div className=\"flex justify-center items-center gap-8 p-4 bg-slate-100 dark:bg-slate-800 rounded-lg\">\n              <LabEquipmentIcon className=\"w-24 h-24 text-slate-500\" />\n              <p className=\"text-slate-600 dark:text-slate-400 text-center\">\n                This process is a real-world example of how chemists create\n                useful compounds from simpler starting materials.\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* The Core Problem */}\n        <Card className=\"border-teal-500 border-2\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl\">The Core Problem</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-lg\">\n              A student starts with <strong>5.00 grams of salicylic acid</strong> (C₇H₆O₃) and an excess\n              of acetic anhydride. After the reaction, they collect{\" \"}\n              <strong>5.80 grams of aspirin</strong> (C₉H₈O₄).\n            </p>\n            <p className=\"mt-2 font-bold text-xl text-teal-600 dark:text-teal-400\">\n              What is the percent yield of the reaction?\n            </p>\n          </CardContent>\n        </Card>\n\n        {/* 2. CRA Approach */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-2xl\">\n              From Concrete to Abstract\n            </CardTitle>\n            <CardDescription>\n              Let's connect what we see to the symbols we use.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"grid md:grid-cols-3 gap-4\">\n            <div className=\"p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n              <h3 className=\"font-bold text-green-700 dark:text-green-300\">\n                1. Concrete (The Real World)\n              </h3>\n              <p className=\"text-sm mt-1\">\n                You see a white powder (salicylic acid) being mixed with a\n                liquid. After heating and cooling, a new white solid (aspirin)\n                forms.\n              </p>\n            </div>\n            <div className=\"p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n              <h3 className=\"font-bold text-blue-700 dark:text-blue-300\">\n                2. Representational (The Models)\n              </h3>\n              <p className=\"text-sm mt-1\">We draw molecules and write equations to visualize what's happening at a level we can't see.</p>\n              <div className=\"flex justify-around items-center mt-2\">\n                <SalicylicAcidMoleculeIcon className=\"w-16 h-16\" />\n                <span className=\"text-2xl\">+ ... →</span>\n                <AspirinMoleculeIcon className=\"w-16 h-16\" />\n              </div>\n            </div>\n            <div className=\"p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg\">\n              <h3 className=\"font-bold text-purple-700 dark:text-purple-300\">\n                3. Abstract (The Symbols)\n              </h3>\n              <p className=\"text-sm mt-1\">\n                We use chemical formulas and math to calculate exact quantities.\n              </p>\n              <p className=\"font-mono text-sm mt-2 break-all\">\n                C₇H₆O₃ + C₄H₆O₃ → C₉H₈O₄ + CH₃COOH\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* 3. F.O.P.S. Strategy */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-2xl\">\n              Let's Solve It: The F.O.P.S. Strategy\n            </CardTitle>\n            <CardDescription>\n              A step-by-step guide to tackle any chemistry problem.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Accordion type=\"single\" collapsible className=\"w-full\">\n              <AccordionItem value=\"item-1\">\n                <AccordionTrigger className=\"text-lg font-semibold\">\n                  <div className=\"flex items-center gap-3\">\n                    <BookOpen className=\"w-6 h-6 text-teal-500\" />F - Find the\n                    Principle\n                  </div>\n                </AccordionTrigger>\n                <AccordionContent className=\"text-base pl-10\">\n                  The goal is to find the <strong>percent yield</strong>. The formula is:\n                  <div className=\"my-2 p-2 bg-slate-100 dark:bg-slate-800 rounded-md font-mono text-center\">\n                    Percent Yield = (Actual Yield / Theoretical Yield) * 100%\n                  </div>\n                  We have the <strong>Actual Yield</strong> (5.80 g), but we need to calculate the <strong>Theoretical Yield</strong>. This requires stoichiometry.\n                </AccordionContent>\n              </AccordionItem>\n\n              <AccordionItem value=\"item-2\">\n                <AccordionTrigger className=\"text-lg font-semibold\">\n                  <div className=\"flex items-center gap-3\">\n                    <ListOrdered className=\"w-6 h-6 text-teal-500\" />O -\n                    Organize Information\n                  </div>\n                </AccordionTrigger>\n                <AccordionContent className=\"text-base pl-10\">\n                  Let's list what we know and need:\n                  <ul className=\"list-disc list-inside mt-2 space-y-1\">\n                    <li><strong>Known:</strong> Mass of Salicylic Acid = 5.00 g</li>\n                    <li><strong>Known:</strong> Actual Yield of Aspirin = 5.80 g</li>\n                    <li><strong>Need to find:</strong> Molar Mass of Salicylic Acid (C₇H₆O₃)</li>\n                    <li><strong>Need to find:</strong> Molar Mass of Aspirin (C₉H₈O₄)</li>\n                    <li><strong>Ultimate Goal:</strong> Theoretical Yield of Aspirin</li>\n                  </ul>\n                  <p className=\"mt-2 text-sm text-slate-600 dark:text-slate-400\">\n                    Molar Mass C≈12.01, H≈1.01, O≈16.00 g/mol\n                  </p>\n                </AccordionContent>\n              </AccordionItem>\n\n              <AccordionItem value=\"item-3\">\n                <AccordionTrigger className=\"text-lg font-semibold\">\n                  <div className=\"flex items-center gap-3\">\n                    <Lightbulb className=\"w-6 h-6 text-teal-500\" />P - Plan the\n                    Approach\n                  </div>\n                </AccordionTrigger>\n                <AccordionContent className=\"text-base pl-10 space-y-2\">\n                  <p>Our roadmap to the theoretical yield:</p>\n                  <ol className=\"list-decimal list-inside space-y-1\">\n                    <li>Calculate molar mass of salicylic acid.</li>\n                    <li>Convert grams of salicylic acid to moles.</li>\n                    <li>Use the 1:1 mole ratio from the balanced equation to find moles of aspirin.</li>\n                    <li>Calculate molar mass of aspirin.</li>\n                    <li>Convert moles of aspirin to grams (this is the theoretical yield).</li>\n                  </ol>\n                </AccordionContent>\n              </AccordionItem>\n\n              <AccordionItem value=\"item-4\">\n                <AccordionTrigger className=\"text-lg font-semibold\">\n                  <div className=\"flex items-center gap-3\">\n                    <Calculator className=\"w-6 h-6 text-teal-500\" />S - Solve\n                    the Problem\n                  </div>\n                </AccordionTrigger>\n                <AccordionContent className=\"text-base pl-10 space-y-4\">\n                  <div>\n                    <p><strong>Step 1 & 2:</strong> Molar mass of Salicylic Acid is ~138.12 g/mol. Moles = 5.00 g / 138.12 g/mol ≈ 0.0362 moles.</p>\n                    <InteractiveCalculator \n                      label=\"Try it: Calculate moles of salicylic acid (5.00 g / 138.12 g/mol).\"\n                      correctAnswer={0.0362}\n                      explanation=\"This is the starting amount of our key reactant in moles.\"\n                    />\n                  </div>\n                   <div>\n                    <p><strong>Step 3:</strong> The reaction is 1:1, so we expect 0.0362 moles of aspirin.</p>\n                  </div>\n                   <div>\n                    <p><strong>Step 4 & 5:</strong> Molar mass of Aspirin is ~180.16 g/mol. Theoretical yield = 0.0362 moles * 180.16 g/mol ≈ 6.52 g.</p>\n                     <InteractiveCalculator \n                      label=\"Try it: Calculate the theoretical yield of aspirin (0.0362 mol * 180.16 g/mol).\"\n                      correctAnswer={6.52}\n                      explanation=\"This is the maximum amount of aspirin possible.\"\n                    />\n                  </div>\n                  <div>\n                    <h4 className=\"font-bold text-lg mt-6\">Final Calculation: Percent Yield</h4>\n                    <p className=\"mt-2\">Now, use the main formula:</p>\n                    <p className=\"font-mono p-2 bg-slate-100 dark:bg-slate-800 rounded-md\"> (5.80 g / 6.52 g) * 100% </p>\n                    <InteractiveCalculator \n                      label=\"Calculate the final percent yield.\"\n                      correctAnswer={88.9}\n                      explanation=\"This is our final answer!\"\n                    />\n                  </div>\n                </AccordionContent>\n              </AccordionItem>\n            </Accordion>\n          </CardContent>\n        </Card>\n\n        {/* 4. Metacognitive Check */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-2xl\">\n              <CheckCircle className=\"w-8 h-8 text-green-500\" />\n              Metacognitive Checkpoint\n            </CardTitle>\n            <CardDescription>\n              Stop and think: Does the answer make sense?\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            <p>\n              <strong>What principle did I apply?</strong> Stoichiometry and the concept of percent yield.\n            </p>\n            <p>\n              <strong>How did I check my work?</strong> I broke the problem into small steps and checked calculations along the way.\n            </p>\n            <p>\n              <strong>Is the answer reasonable?</strong> An 88.9% yield is high, but plausible for a lab setting. It's less than 100%, which is expected, as no reaction is perfect. An answer over 100% would suggest an error (e.g., wet product).\n            </p>\n          </CardContent>\n        </Card>\n\n        {/* 5. Transfer Problems */}\n        <section>\n          <h2 className=\"text-3xl font-bold text-center mb-4\">\n            🔁 Transfer Your Skills\n          </h2>\n          <p className=\"text-center text-slate-600 dark:text-slate-400 mb-6\">\n            True understanding means you can apply the same logic to new situations. Let's test it out.\n          </p>\n          <TransferProblems />\n        </section>\n      </div>\n    </main>\n  );\n}\n```\n\n**5. Update Global Styles**\n\nReplace the content of `app/globals.css` to ensure the background color is applied correctly.\n\n```css file=\"app/globals.css\"\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 84% 4.9%;\n\n    --card: 0 0% 100%;\n    --card-foreground: 222.2 84% 4.9%;\n\n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 84% 4.9%;\n\n    --primary: 222.2 47.4% 11.2%;\n    --primary-foreground: 210 40% 98%;\n\n    --secondary: 210 40% 96.1%;\n    --secondary-foreground: 222.2 47.4% 11.2%;\n\n    --muted: 210 40% 96.1%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n\n    --accent: 210 40% 96.1%;\n    --accent-foreground: 222.2 47.4% 11.2%;\n\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 40% 98%;\n\n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n    --ring: 222.2 84% 4.9%;\n\n    --radius: 0.5rem;\n  }\n\n  .dark {\n    --background: 222.2 84% 4.9%;\n    --foreground: 210 40% 98%;\n\n    --card: 222.2 84% 4.9%;\n    --card-foreground: 210 40% 98%;\n\n    --popover: 222.2 84% 4.9%;\n    --popover-foreground: 210 40% 98%;\n\n    --primary: 210 40% 98%;\n    --primary-foreground: 222.2 47.4% 11.2%;\n\n    --secondary: 217.2 32.6% 17.5%;\n    --secondary-foreground: 210 40% 98%;\n\n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n\n    --accent: 217.2 32.6% 17.5%;\n    --accent-foreground: 210 40% 98%;\n\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 40% 98%;\n\n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n    --ring: 215 20.2% 65.1%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n```\n\nNow, run `npm run dev` to see your educational webpage in action.\n\n</CodeProject>"
}
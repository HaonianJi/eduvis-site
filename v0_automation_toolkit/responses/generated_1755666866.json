{
  "content": "<Thinking>\n### Plan for the Educational Chemistry Webpage\n\nMy goal is to create a single-page, instructionally rich Next.js application that teaches a specific chemistry problem while building deeper scientific reasoning skills. I will follow the user's detailed pedagogical plan, including the CRA model, F.O.P.S. strategy, and near/far transfer problems.\n\n#### 1. Project Structure & File Organization\n\nI'll structure the application using the Next.js App Router. I will break down the page into logical, reusable components to keep the code clean and maintainable, adhering to the lean file principle.\n\n-   **`app/layout.tsx`**: The root layout, including basic HTML structure and global styles.\n-   **`app/page.tsx`**: The main page component that will assemble the entire educational experience.\n-   **`components/ui/`**: Directory for `shadcn/ui` components (Card, Button, Accordion, Input).\n-   **`components/icons.tsx`**: A simple component to manage and export SVG icons for visual flair (e.g., beaker, lightbulb).\n-   **`components/page-header.tsx`**: A header component for the title of the lesson.\n-   **`components/introduction-section.tsx`**: A component to set the real-world context of the problem, with a placeholder for a visual.\n-   **`components/cra-section.tsx`**: An `Accordion`-based component to walk through the Concrete-Representational-Abstract stages.\n-   **`components/fops-walkthrough.tsx`**: A detailed, step-by-step component using `Card`s to explain the F.O.P.S. problem-solving method for the core problem.\n-   **`components/metacognition-prompts.tsx`**: A visually distinct component (e.g., a callout box) to display metacognitive questions.\n-   **`components/transfer-problems.tsx`**: A container component for the near and far transfer practice problems.\n-   **`components/interactive-problem.tsx`**: A client-side component (`\"use client\"`) that presents a problem, accepts user input, and provides feedback. This will be used for both near and far transfer problems.\n-   **`lib/utils.ts`**: The standard utility file for `cn()` from `shadcn/ui`.\n\n#### 2. Core Chemistry Problem & Content Flow\n\n-   **Core Problem**: I will focus on a foundational stoichiometry problem: *Calculating the mass of a product from a given mass of a reactant.*\n    -   **Reaction**: The combustion of magnesium: `2Mg + O₂ → 2MgO`. This is visually striking and common in introductory chemistry labs.\n    -   **Specific Question**: \"If you start with 6.0 grams of magnesium (Mg), how many grams of magnesium oxide (MgO) can you produce, assuming you have plenty of oxygen?\"\n\n-   **Page Flow**:\n    1.  **Header**: Title of the lesson.\n    2.  **Introduction**: Set the scene with the burning magnesium ribbon experiment.\n    3.  **CRA Section**:\n        -   **Concrete**: Describe the observation of a silver ribbon burning to form a white powder.\n        -   **Representational**: Show particle diagrams and the balanced chemical equation.\n        -   **Abstract**: Introduce the formulas for molar mass and the concept of the mole ratio from the equation.\n    4.  **F.O.P.S. Walkthrough**: Solve the core problem (6.0g Mg to ?g MgO) using the F.O.P.S. framework. Each step will be clearly explained in its own card.\n    5.  **Metacognition Prompts**: Insert questions like \"Why is converting to moles a crucial step?\" to encourage reflection.\n    6.  **Transfer Problems Section**:\n        -   **Near-Transfer Problem**: A different stoichiometry problem (e.g., decomposition of water). The chemical context is different, but the `mass → mole → mole → mass` calculation pattern is identical.\n        -   **Far-Transfer Problem**: A gas law problem (Boyle's Law: P₁V₁ = P₂V₂). The context is completely different (gases, pressure, volume), but the underlying mathematical structure is proportional reasoning, similar to the mole ratio step.\n\n#### 3. Styling & Interactivity\n\n-   **Styling**: I will use Tailwind CSS for a modern, responsive design. The `shadcn/ui` library will provide pre-built, accessible components like `Card`, `Accordion`, `Button`, and `Input` for a clean, educational look and feel. The color scheme will be neutral (e.g., `slate` or `zinc`) with a single accent color (e.g., `emerald`) for highlights and feedback.\n-   **Interactivity**: The `InteractiveProblem` component will be the main interactive element. It will use `useState` to manage user input and provide real-time feedback. This necessitates the `\"use client\"` directive for that component. The rest of the page will be composed of Server Components for optimal performance.\n-   **Visuals**: I will use SVG icons from `lucide-react` to enhance visual communication without needing actual image files. A placeholder comment will indicate where a GIF or image of the magnesium reaction would go.\n\n#### 4. Frameworks & Libraries\n\n-   **Next.js (App Router)**: The core framework.\n-   **React**: For building the UI.\n-   **TypeScript**: For type safety.\n-   **Tailwind CSS**: For styling.\n-   **shadcn/ui**: For UI components.\n-   **lucide-react**: For icons.\n\n#### 5. Caveats\n\n-   The application will be a static, single-page experience. No backend or database is needed.\n-   The interactive problems will have client-side answer checking. The correct answers will be hardcoded into the props for simplicity.\n-   Visuals like GIFs or complex diagrams will be represented by placeholders and descriptive text.\n\nThis plan provides a comprehensive roadmap to generate the requested webpage, fully integrating the pedagogical requirements with modern web development practices.\n\n</Thinking>\n\n```bash\nnpx create-next-app@latest . --typescript --eslint --tailwind --app --src-dir --import-alias=\"@/*\" --yes\nnpx shadcn-ui@latest init\n# Accept defaults.\nnpx shadcn-ui@latest add card button input accordion\nnpm install lucide-react\n```\n\nHere is the complete code for your educational chemistry webpage.\n\n### Project Structure\n\n```text\n.\n├── src/\n│   ├── app/\n│   │   ├── globals.css\n│   │   ├── layout.tsx\n│   │   └── page.tsx\n│   ├── components/\n│   │   ├── cra-section.tsx\n│   │   ├── fops-walkthrough.tsx\n│   │   ├── icons.tsx\n│   │   ├── interactive-problem.tsx\n│   │   ├── introduction-section.tsx\n│   │   ├── metacognition-prompts.tsx\n│   │   ├── page-header.tsx\n│   │   ├── transfer-problems.tsx\n│   │   └── ui/\n│   │       ├── accordion.tsx\n│   │       ├── button.tsx\n│   │       ├── card.tsx\n│   │       └── input.tsx\n│   └── lib/\n│       └── utils.ts\n├── tailwind.config.ts\n└── ... (other config files)\n```\n\n### Code Files\n\n**`src/lib/utils.ts`**\n```ts file=\"src/lib/utils.ts\"\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n```\n\n**`src/app/globals.css`**\n```css file=\"src/app/globals.css\"\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 84% 4.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 222.2 84% 4.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 84% 4.9%;\n    --primary: 222.2 47.4% 11.2%;\n    --primary-foreground: 210 40% 98%;\n    --secondary: 210 40% 96.1%;\n    --secondary-foreground: 222.2 47.4% 11.2%;\n    --muted: 210 40% 96.1%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n    --accent: 210 40% 96.1%;\n    --accent-foreground: 222.2 47.4% 11.2%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n    --ring: 222.2 84% 4.9%;\n    --radius: 0.5rem;\n  }\n\n  .dark {\n    --background: 222.2 84% 4.9%;\n    --foreground: 210 40% 98%;\n    --card: 222.2 84% 4.9%;\n    --card-foreground: 210 40% 98%;\n    --popover: 222.2 84% 4.9%;\n    --popover-foreground: 210 40% 98%;\n    --primary: 210 40% 98%;\n    --primary-foreground: 222.2 47.4% 11.2%;\n    --secondary: 217.2 32.6% 17.5%;\n    --secondary-foreground: 210 40% 98%;\n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n    --accent: 217.2 32.6% 17.5%;\n    --accent-foreground: 210 40% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n    --ring: 212.7 26.8% 83.9%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n```\n\n**`src/app/layout.tsx`**\n```tsx file=\"src/app/layout.tsx\"\nimport type { Metadata } from \"next\";\nimport { Inter } from \"next/font/google\";\nimport \"./globals.css\";\nimport { cn } from \"@/lib/utils\";\n\nconst inter = Inter({ subsets: [\"latin\"] });\n\nexport const metadata: Metadata = {\n  title: \"Chemistry Problem Solver\",\n  description: \"An interactive guide to mastering stoichiometry.\",\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <body className={cn(\"min-h-screen bg-background font-sans antialiased\", inter.className)}>\n        {children}\n      </body>\n    </html>\n  );\n}\n```\n\n**`src/components/icons.tsx`**\n```tsx file=\"src/components/icons.tsx\"\nimport { Beaker, Lightbulb, FlaskConical, Scale, Recycle, Atom } from 'lucide-react';\n\nexport const Icons = {\n  Beaker,\n  Lightbulb,\n  FlaskConical,\n  Scale,\n  Recycle,\n  Atom,\n};\n```\n\n**`src/components/page-header.tsx`**\n```tsx file=\"src/components/page-header.tsx\"\nexport function PageHeader({ title, description }: { title: string; description: string }) {\n  return (\n    <div className=\"text-center mb-12\">\n      <h1 className=\"text-4xl font-extrabold tracking-tight lg:text-5xl\">{title}</h1>\n      <p className=\"text-lg text-muted-foreground mt-2\">{description}</p>\n    </div>\n  );\n}\n```\n\n**`src/components/introduction-section.tsx`**\n```tsx file=\"src/components/introduction-section.tsx\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Icons } from \"./icons\";\n\nexport function IntroductionSection() {\n  return (\n    <section className=\"mb-12\">\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center gap-4\">\n            <Icons.FlaskConical className=\"w-8 h-8 text-primary\" />\n            <CardTitle className=\"text-2xl\">1. The Real-World Scenario: The Mystery of the White Powder</CardTitle>\n          </div>\n        </CardHeader>\n        <CardContent className=\"grid md:grid-cols-2 gap-6 items-center\">\n          <div>\n            <p className=\"text-muted-foreground leading-relaxed\">\n              Imagine you're in a chemistry lab. Your instructor hands you a strip of silvery magnesium metal and asks you to burn it using a Bunsen burner. As it ignites, it produces a blindingly bright white light!\n            </p>\n            <p className=\"text-muted-foreground leading-relaxed mt-4\">\n              When the reaction is over, all that's left is a crumbly, white powder. This is a chemical reaction where one substance (magnesium) has transformed into a new one (magnesium oxide). Our core question is:{\" \"}\n              <strong className=\"text-foreground\">can we predict exactly how much of this white powder we will make?</strong>\n            </p>\n          </div>\n          <div className=\"bg-slate-100 dark:bg-slate-800 rounded-lg p-8 flex items-center justify-center min-h-[200px]\">\n            <p className=\"text-center text-muted-foreground italic\">\n              [Visual Placeholder: A GIF or short video of a magnesium strip burning with a bright white flame would be here.]\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </section>\n  );\n}\n```\n\n**`src/components/cra-section.tsx`**\n```tsx file=\"src/components/cra-section.tsx\"\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Icons } from \"./icons\";\n\nexport function CraSection() {\n  return (\n    <section className=\"mb-12\">\n      <h2 className=\"text-3xl font-bold tracking-tight mb-4 flex items-center gap-3\">\n        <Icons.Recycle className=\"w-8 h-8 text-primary\" />\n        2. From Observation to Abstraction (C-R-A)\n      </h2>\n      <p className=\"text-muted-foreground mb-6\">\n        To solve chemistry problems, we need to connect what we see in the real world to the symbols and numbers we use to represent it. This is the Concrete-Representational-Abstract (CRA) approach.\n      </p>\n      <Accordion type=\"single\" collapsible className=\"w-full\" defaultValue=\"item-1\">\n        <AccordionItem value=\"item-1\">\n          <AccordionTrigger className=\"text-xl font-semibold\">Concrete: The Observable</AccordionTrigger>\n          <AccordionContent className=\"text-base text-muted-foreground\">\n            This is what we can see and measure in the lab. A solid, silvery metal (Magnesium) reacts with an invisible gas from the air (Oxygen) to produce a new substance, a white, crumbly powder (Magnesium Oxide). We can weigh these substances.\n          </AccordionContent>\n        </AccordionItem>\n        <AccordionItem value=\"item-2\">\n          <AccordionTrigger className=\"text-xl font-semibold\">Representational: The Model</AccordionTrigger>\n          <AccordionContent className=\"text-base text-muted-foreground\">\n            We model this process with diagrams and equations. At the particle level, individual magnesium atoms (Mg) are rearranging with oxygen molecules (O₂) to form new units of magnesium oxide (MgO). We represent this with a balanced chemical equation:\n            <div className=\"mt-4 p-4 bg-secondary rounded-lg text-center font-mono text-lg\">\n              2Mg + O₂ → 2MgO\n            </div>\n            <p className=\"mt-2\">This tells us that 2 atoms of Magnesium react with 1 molecule of Oxygen to produce 2 formula units of Magnesium Oxide.</p>\n          </AccordionContent>\n        </AccordionItem>\n        <AccordionItem value=\"item-3\">\n          <AccordionTrigger className=\"text-xl font-semibold\">Abstract: The Symbols & Calculations</AccordionTrigger>\n          <AccordionContent className=\"text-base text-muted-foreground\">\n            This is where we use symbols and mathematical rules. The equation gives us a powerful ratio, the <strong className=\"text-foreground\">mole ratio</strong>. From \"2Mg → 2MgO\", we know that for every 2 moles of Mg we use, we make 2 moles of MgO. This 2:2 (or 1:1) ratio is the key to our calculation. We'll use this abstract concept, along with molar masses, to solve the problem.\n          </AccordionContent>\n        </AccordionItem>\n      </Accordion>\n    </section>\n  );\n}\n```\n\n**`src/components/fops-walkthrough.tsx`**\n```tsx file=\"src/components/fops-walkthrough.tsx\"\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Icons } from \"./icons\";\n\nexport function FopsWalkthrough() {\n  return (\n    <section className=\"mb-12\">\n      <h2 className=\"text-3xl font-bold tracking-tight mb-4 flex items-center gap-3\">\n        <Icons.Scale className=\"w-8 h-8 text-primary\" />\n        3. A Strategy for Success: The F.O.P.S. Method\n      </h2>\n      <Card className=\"bg-amber-50 dark:bg-amber-950 border-amber-200 dark:border-amber-800 mb-6\">\n        <CardHeader>\n          <CardTitle>The Core Problem</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-xl font-medium\">\"If you start with 6.0 grams of magnesium (Mg), how many grams of magnesium oxide (MgO) can you produce?\"</p>\n        </CardContent>\n      </Card>\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\"><div className=\"w-8 h-8 bg-primary text-primary-foreground rounded-full flex items-center justify-center font-bold\">F</div> Find</CardTitle>\n            <CardDescription>Find the core principle.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <p>The problem asks us to relate the amount of a reactant (Mg) to the amount of a product (MgO). This is a <strong className=\"text-foreground\">stoichiometry</strong> problem. The guiding principle is the Law of Conservation of Mass, applied through mole ratios from a balanced equation.</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\"><div className=\"w-8 h-8 bg-primary text-primary-foreground rounded-full flex items-center justify-center font-bold\">O</div> Organize</CardTitle>\n            <CardDescription>Organize your information.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ul className=\"list-disc pl-5 space-y-2\">\n              <li><strong>Known:</strong> Mass of Mg = 6.0 g</li>\n              <li><strong>Unknown:</strong> Mass of MgO = ? g</li>\n              <li><strong>Needed Info:</strong></li>\n              <li className=\"ml-4\">Molar Mass Mg: 24.3 g/mol</li>\n              <li className=\"ml-4\">Molar Mass MgO: 40.3 g/mol</li>\n              <li className=\"ml-4\">Balanced Eq: 2Mg + O₂ → 2MgO</li>\n            </ul>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\"><div className=\"w-8 h-8 bg-primary text-primary-foreground rounded-full flex items-center justify-center font-bold\">P</div> Plan</CardTitle>\n            <CardDescription>Plan your calculation path.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <p>We can't convert directly from grams of Mg to grams of MgO. We must go through the \"mole bridge\".</p>\n            <div className=\"mt-2 font-mono text-sm p-2 bg-secondary rounded\">\n              g Mg → mol Mg → mol MgO → g MgO\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\"><div className=\"w-8 h-8 bg-primary text-primary-foreground rounded-full flex items-center justify-center font-bold\">S</div> Solve</CardTitle>\n            <CardDescription>Solve the problem step-by-step.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <p className=\"font-semibold\">1. g Mg → mol Mg</p>\n            <p className=\"text-sm font-mono\">6.0g / 24.3 g/mol = 0.247 mol Mg</p>\n            <p className=\"font-semibold mt-2\">2. mol Mg → mol MgO</p>\n            <p className=\"text-sm font-mono\">0.247 mol Mg * (2 mol MgO / 2 mol Mg) = 0.247 mol MgO</p>\n            <p className=\"font-semibold mt-2\">3. mol MgO → g MgO</p>\n            <p className=\"text-sm font-mono\">0.247 mol * 40.3 g/mol = 9.95 g MgO</p>\n            <p className=\"mt-2 p-2 bg-emerald-100 dark:bg-emerald-900 rounded font-bold\">Answer: ~10.0 g MgO</p>\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  );\n}\n```\n\n**`src/components/metacognition-prompts.tsx`**\n```tsx file=\"src/components/metacognition-prompts.tsx\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Icons } from \"./icons\";\n\nexport function MetacognitionPrompts() {\n  return (\n    <section className=\"mb-12\">\n      <Card className=\"bg-sky-50 dark:bg-sky-950 border-sky-200 dark:border-sky-800\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-3\">\n            <Icons.Lightbulb className=\"w-8 h-8 text-sky-600 dark:text-sky-400\" />\n            Pause and Reflect: Thinking Like a Scientist\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <ul className=\"list-disc pl-5 space-y-2 text-muted-foreground\">\n            <li><strong>What did I know?</strong> I knew the starting mass and the chemical reaction.</li>\n            <li><strong>What principles apply?</strong> Stoichiometry and the mole concept are key. The balanced equation is non-negotiable!</li>\n            <li><strong>Why did the plan work?</strong> Converting to moles is essential because the balanced equation gives us a ratio of particles (moles), not a ratio of masses.</li>\n            <li><strong>How can I check my answer?</strong> Does the answer seem reasonable? I started with 6g and ended with ~10g. This makes sense because oxygen was added. I can also double-check my molar masses and calculations.</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </section>\n  );\n}\n```\n\n**`src/components/interactive-problem.tsx`**\n```tsx file=\"src/components/interactive-problem.tsx\"\n'use client';\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface InteractiveProblemProps {\n  title: string;\n  description: string;\n  problemText: string;\n  correctAnswer: number;\n  unit: string;\n}\n\nexport function InteractiveProblem({ title, description, problemText, correctAnswer, unit }: InteractiveProblemProps) {\n  const [userInput, setUserInput] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [isCorrect, setIsCorrect] = useState<boolean | null>(null);\n\n  const handleCheckAnswer = () => {\n    const userAnswer = parseFloat(userInput);\n    if (isNaN(userAnswer)) {\n      setFeedback('Please enter a valid number.');\n      setIsCorrect(false);\n      return;\n    }\n\n    // Allow for a small tolerance in floating point answers\n    if (Math.abs(userAnswer - correctAnswer) < 0.1) {\n      setFeedback('Correct! You successfully applied the reasoning.');\n      setIsCorrect(true);\n    } else {\n      setFeedback('Not quite. Review the steps and try again!');\n      setIsCorrect(false);\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <p className=\"mb-4\">{problemText}</p>\n        <div className=\"flex items-center gap-2\">\n          <Input\n            type=\"text\"\n            placeholder=\"Your answer\"\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            className=\"max-w-xs\"\n          />\n          <span>{unit}</span>\n        </div>\n      </CardContent>\n      <CardFooter className=\"flex flex-col items-start gap-4\">\n        <Button onClick={handleCheckAnswer}>Check Answer</Button>\n        {feedback && (\n          <p className={`text-sm font-medium ${isCorrect ? 'text-emerald-600' : 'text-destructive'}`}>\n            {feedback}\n          </p>\n        )}\n      </CardFooter>\n    </Card>\n  );\n}\n```\n\n**`src/components/transfer-problems.tsx`**\n```tsx file=\"src/components/transfer-problems.tsx\"\nimport { Icons } from \"./icons\";\nimport { InteractiveProblem } from \"./interactive-problem\";\n\nexport function TransferProblems() {\n  return (\n    <section>\n      <h2 className=\"text-3xl font-bold tracking-tight mb-4 flex items-center gap-3\">\n        <Icons.Atom className=\"w-8 h-8 text-primary\" />\n        4. Test Your Skills: Transfer Your Knowledge\n      </h2>\n      <p className=\"text-muted-foreground mb-6\">\n        True understanding means you can apply a concept in new situations. Let's try a couple of practice problems.\n      </p>\n      <div className=\"grid md:grid-cols-2 gap-8\">\n        <InteractiveProblem\n          title=\"📌 Near-Transfer Problem\"\n          description=\"Same structure, different chemicals.\"\n          problemText=\"Water can be split into hydrogen and oxygen (2H₂O → 2H₂ + O₂). If you produce 4.0 g of hydrogen gas (H₂, molar mass ≈ 2.0 g/mol), how many grams of water (H₂O, molar mass ≈ 18.0 g/mol) did you start with?\"\n          correctAnswer={36.0}\n          unit=\"grams\"\n        />\n        <InteractiveProblem\n          title=\"📌 Far-Transfer Problem\"\n          description=\"Different topic, same reasoning pattern.\"\n          problemText=\"A gas in a flexible container has a volume of 5.0 L at a pressure of 1.2 atm. If the pressure is increased to 3.0 atm (at constant temperature), what is the new volume of the gas? (Hint: P₁V₁ = P₂V₂)\"\n          correctAnswer={2.0}\n          unit=\"Liters\"\n        />\n      </div>\n    </section>\n  );\n}\n```\n\n**`src/app/page.tsx`**\n```tsx file=\"src/app/page.tsx\"\nimport { CraSection } from \"@/components/cra-section\";\nimport { FopsWalkthrough } from \"@/components/fops-walkthrough\";\nimport { IntroductionSection } from \"@/components/introduction-section\";\nimport { MetacognitionPrompts } from \"@/components/metacognition-prompts\";\nimport { PageHeader } from \"@/components/page-header\";\nimport { TransferProblems } from \"@/components/transfer-problems\";\n\nexport default function HomePage() {\n  return (\n    <main className=\"container mx-auto px-4 py-8 md:py-12\">\n      <PageHeader\n        title=\"Mastering Stoichiometry\"\n        description=\"An interactive guide to solving chemistry problems by building deep conceptual understanding.\"\n      />\n      <div className=\"max-w-4xl mx-auto space-y-12\">\n        <IntroductionSection />\n        <CraSection />\n        <FopsWalkthrough />\n        <MetacognitionPrompts />\n        <TransferProblems />\n      </div>\n    </main>\n  );\n}\n```"
}
{
  "content": "An excellent and detailed instructional plan. I will now generate the webpage based on your design. The page will guide a student through a chemistry problem using the principles of contextual learning, the Concrete-Representational-Abstract (CRA) approach, the F.O.P.S. problem-solving heuristic, and carefully designed near and far-transfer tasks to promote deep conceptual understanding.\n\nHere is the educational webpage you designed.\n\n<Thinking>\nI will structure the project as a single-page application using Next.js and the App Router. The page will be divided into distinct sections as outlined in the user's plan.\n\n**Project Structure:**\n\n*   `app/layout.tsx`: Root layout with basic HTML structure and Tailwind CSS classes.\n*   `app/page.tsx`: The main server component that will assemble the entire educational page.\n*   `components/ui/`: Will contain shadcn/ui components (`card`, `button`, `input`, `accordion`, `separator`).\n*   `components/icons.tsx`: A file for custom SVG icons used throughout the page (e.g., beaker, flask, scale) to keep the main component clean.\n*   `components/problem-solvers/`: A new directory for the interactive client components.\n    *   `main-problem-solver.tsx`: An interactive client component for the main problem, guiding the user through the F.O.P.S. steps. It will use `useState` to manage user input and calculated values.\n    *   `transfer-problem-solver.tsx`: A reusable client component for the near and far transfer problems. It will take the problem details (text, correct answer, solution steps) as props and manage its own state for user input and feedback. This promotes component reuse.\n*   `lib/utils.ts`: Standard file from shadcn/ui for `cn` utility.\n*   `public/`: Will hold any static assets, like an image or GIF of the magnesium reaction if I choose to use one.\n\n**Styling and Visuals:**\n\n*   I will use `shadcn/ui` components (`Card`, `Accordion`, `Button`, `Input`) to structure the content cleanly and professionally.\n*   The color palette will be educational and accessible, with a primary neutral theme (slate/gray) and a highlight color (like a teal or amber) for important callouts and interactive elements.\n*   I will create simple SVG icons in `components/icons.tsx` for visual elements like the \"Lab Assistant,\" lab equipment, and particle models. This avoids external image dependencies and ensures crisp visuals.\n*   The overall design will be responsive, using a single-column layout on mobile and a slightly wider, centered layout on larger screens.\n\n**Frameworks and Libraries:**\n\n*   **Next.js (App Router):** The core framework.\n*   **React:** For component-based UI.\n*   **Tailwind CSS:** For styling.\n*   **shadcn/ui:** For pre-built, accessible UI components.\n*   **Lucide React:** For icons, installed with shadcn/ui.\n\n**Step-by-Step Implementation Plan:**\n\n1.  **Setup:** Initialize a new Next.js project with TypeScript, Tailwind, and ESLint. Set up `shadcn/ui`.\n2.  **Icons:** Create the `components/icons.tsx` file and add SVG components for `LabAssistant`, `Beaker`, `Atom`, `Molecule`, `BalanceScale`.\n3.  **Layout:** Create the main `app/page.tsx`. This will be a server component. I'll lay out all the sections using `Card` components for visual separation.\n4.  **Section 1 (Intro):** Build the introduction section with the lab assistant character and the real-world baking analogy, leading into the main chemistry problem.\n5.  **Section 2 (CRA):** Implement the Concrete-Representational-Abstract section. I'll use a simple visual for the \"concrete\" reaction and then use the custom icons to build the \"representational\" particle diagram and the balanced equation.\n6.  **Section 3 (F.O.P.S):**\n    *   Create the `components/problem-solvers/main-problem-solver.tsx` client component.\n    *   This component will use the `Accordion` component from shadcn/ui to represent the F.O.P.S steps.\n    *   Inside the \"Solve\" step, I will add `Input` fields and `Button`s, managed with `useState`, to make the calculations interactive.\n    *   I'll include the metacognitive check at the end.\n7.  **Section 4 & 5 (Transfer Problems):**\n    *   Create the `components/problem-solvers/transfer-problem-solver.tsx` reusable client component.\n    *   It will accept `problemTitle`, `problemText`, `solution`, and `explanation` as props.\n    *   It will contain an `Input` for the user's answer, a \"Check Answer\" button, and state to show feedback (correct/incorrect) and a \"Show Solution\" button.\n    *   In `app/page.tsx`, I will render this component twice, once for the near-transfer problem and once for the far-transfer problem, passing in the appropriate props for each.\n8.  **Section 6 (Conclusion):** Add the final summary section to recap the key learnings.\n9.  **Final Touches:** Review the code for clarity, responsiveness, and accessibility. Ensure all components marked for client-side interactivity have the `\"use client\"` directive. Ensure files are kept lean and components are well-defined.\n\nThis plan directly translates the user's detailed instructional design into a functional, interactive, and pedagogically sound web application.\n\n</Thinking>\n\n```\nnpx create-next-app@latest . --typescript --eslint --tailwind --app --turbopack --yes\nnpx shadcn-ui@latest init\n# When prompted, select:\n# Style: Default\n# Base color: Slate\n# CSS variables: Yes\nnpx shadcn-ui@latest add card button input accordion separator\n```\n\n```tsx file=\"app/layout.tsx\"\nimport type { Metadata } from 'next'\nimport { Inter } from 'next/font/google'\nimport './globals.css'\n\nconst inter = Inter({ subsets: ['latin'] })\n\nexport const metadata: Metadata = {\n  title: 'Chemistry Problem Solver',\n  description: 'An interactive guide to solving chemistry problems with deep understanding.',\n}\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode\n}>) {\n  return (\n    <html lang=\"en\">\n      <body className={`${inter.className} bg-slate-50 text-slate-900`}>\n        <main className=\"container mx-auto px-4 py-8 md:py-12\">{children}</main>\n      </body>\n    </html>\n  )\n}\n```\n\n```tsx file=\"components/icons.tsx\"\nimport React from 'react'\n\nexport const LabAssistant = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 100 100\"\n    width=\"80\"\n    height=\"80\"\n    {...props}\n  >\n    <circle cx=\"50\" cy=\"50\" r=\"45\" fill=\"#f0f4f8\" stroke=\"#94a3b8\" strokeWidth=\"2\" />\n    <circle cx=\"38\" cy=\"42\" r=\"5\" fill=\"#334155\" />\n    <circle cx=\"62\" cy=\"42\" r=\"5\" fill=\"#334155\" />\n    <path\n      d=\"M35,65 Q50,75 65,65\"\n      stroke=\"#334155\"\n      strokeWidth=\"3\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n    />\n    <path\n      d=\"M20,30 Q50,10 80,30\"\n      stroke=\"#475569\"\n      strokeWidth=\"4\"\n      fill=\"none\"\n    />\n  </svg>\n)\n\nexport const BeakerIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <path d=\"M4.5 3h15\" />\n    <path d=\"M6 3v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V3\" />\n    <path d=\"M6 14h12\" />\n  </svg>\n)\n\nexport const AtomIcon = (props: React.SVGProps<SVGSVGElement>) => (\n    <svg \n        viewBox=\"0 0 24 24\" \n        fill=\"none\" \n        stroke=\"currentColor\" \n        strokeWidth=\"2\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\" \n        {...props}\n    >\n        <circle cx=\"12\" cy=\"12\" r=\"1\" />\n        <path d=\"M20.2 20.2c2.04-2.03.02-5.91-4.04-9.96-4.06-4.06-7.94-6.08-9.96-4.04-2.03 2.03-.02 5.91 4.04 9.96 4.06 4.06 7.94 6.08 9.96 4.04Z\" />\n        <path d=\"M3.8 3.8c-2.04 2.03-.02 5.91 4.04 9.96 4.06 4.06 7.94 6.08 9.96 4.04 2.03-2.03.02-5.91-4.04-9.96-4.06-4.06-7.94-6.08-9.96-4.04Z\" />\n    </svg>\n)\n\nexport const BalanceScaleIcon = (props: React.SVGProps<SVGSVGElement>) => (\n    <svg \n        viewBox=\"0 0 24 24\" \n        fill=\"none\" \n        stroke=\"currentColor\" \n        strokeWidth=\"2\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\" \n        {...props}\n    >\n        <path d=\"m16 16 3-8 3 8c-.83.5-1.9.8-3 .8s-2.17-.3-3-.8Z\" />\n        <path d=\"m2 16 3-8 3 8c-.83.5-1.9.8-3 .8s-2.17-.3-3-.8Z\" />\n        <path d=\"M12 2v2\" />\n        <path d=\"M7 4h10\" />\n        <path d=\"M12 14v8\" />\n        <path d=\"M3 22h18\" />\n    </svg>\n)\n```\n\n```tsx file=\"components/problem-solvers/main-problem-solver.tsx\"\n'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'\nimport { Input } from '@/components/ui/input'\nimport { Button } from '@/components/ui/button'\nimport { BalanceScaleIcon } from '@/components/icons'\n\nexport function MainProblemSolver() {\n  const [mgMass, setMgMass] = useState(3.0)\n  const [mgoMass, setMgoMass] = useState(5.0)\n  const [newMgMass, setNewMgMass] = useState(7.5)\n  const [ratio, setRatio] = useState<number | null>(null)\n  const [finalMass, setFinalMass] = useState<number | null>(null)\n\n  const calculateRatio = () => {\n    if (mgMass > 0) {\n      const calculatedRatio = mgoMass / mgMass\n      setRatio(Number(calculatedRatio.toFixed(3)))\n    }\n  }\n\n  const calculateFinalMass = () => {\n    if (ratio) {\n      const calculatedFinalMass = newMgMass * ratio\n      setFinalMass(Number(calculatedFinalMass.toFixed(2)))\n    }\n  }\n\n  return (\n    <Card className=\"bg-white\">\n      <CardHeader>\n        <CardTitle>Let's Solve It: The F.O.P.S. Method</CardTitle>\n        <CardDescription>Follow these steps to build your scientific model and solve the problem.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Accordion type=\"single\" collapsible className=\"w-full\">\n          <AccordionItem value=\"item-1\">\n            <AccordionTrigger className=\"text-lg font-semibold\">F - Find the Principle</AccordionTrigger>\n            <AccordionContent className=\"text-base\">\n              <div className=\"flex items-center gap-4\">\n                <BalanceScaleIcon className=\"h-12 w-12 text-teal-600 flex-shrink-0\" />\n                <div>\n                  The core chemical principle is the <strong>Law of Definite Proportions</strong>. This law states that a chemical compound always contains its component elements in a fixed ratio by mass. No matter how much magnesium oxide you make, the ratio of the mass of MgO to the mass of Mg used will always be the same.\n                </div>\n              </div>\n            </AccordionContent>\n          </AccordionItem>\n          <AccordionItem value=\"item-2\">\n            <AccordionTrigger className=\"text-lg font-semibold\">O - Organize the Data</AccordionTrigger>\n            <AccordionContent>\n              <p className=\"mb-4\">Let's organize the information from our first experiment into a simple table. This helps us see the relationship clearly.</p>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full text-left border-collapse\">\n                  <thead>\n                    <tr>\n                      <th className=\"border-b-2 p-2\">Substance</th>\n                      <th className=\"border-b-2 p-2\">Role</th>\n                      <th className=\"border-b-2 p-2\">Mass</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td className=\"border-b p-2\">Magnesium (Mg)</td>\n                      <td className=\"border-b p-2\">Reactant</td>\n                      <td className=\"border-b p-2\">3.0 g</td>\n                    </tr>\n                    <tr>\n                      <td className=\"border-b p-2\">Magnesium Oxide (MgO)</td>\n                      <td className=\"border-b p-2\">Product</td>\n                      <td className=\"border-b p-2\">5.0 g</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </AccordionContent>\n          </AccordionItem>\n          <AccordionItem value=\"item-3\">\n            <AccordionTrigger className=\"text-lg font-semibold\">P - Plan Your Approach</AccordionTrigger>\n            <AccordionContent>\n              <p>Our plan has two main parts:</p>\n              <ol className=\"list-decimal list-inside space-y-2 mt-2\">\n                <li><strong>Calculate the mass ratio</strong> of Product to Reactant using the data from the first experiment. This ratio is our \"conversion factor\".</li>\n                <li><strong>Use this ratio</strong> to predict the mass of the product that will form from the new amount of reactant (7.5 g).</li>\n              </ol>\n            </AccordionContent>\n          </AccordionItem>\n          <AccordionItem value=\"item-4\">\n            <AccordionTrigger className=\"text-lg font-semibold\">S - Solve the Problem</AccordionTrigger>\n            <AccordionContent>\n              <div className=\"space-y-6\">\n                <div>\n                  <h4 className=\"font-semibold text-md mb-2\">Step 1: Calculate the Mass Ratio</h4>\n                  <p className=\"text-sm text-slate-600 mb-2\">Ratio = Mass of Product / Mass of Reactant</p>\n                  <div className=\"flex flex-col sm:flex-row items-center gap-2\">\n                    <Input type=\"number\" value={mgoMass} onChange={e => setMgoMass(parseFloat(e.target.value))} aria-label=\"Mass of MgO\" />\n                    <span className=\"text-xl\">/</span>\n                    <Input type=\"number\" value={mgMass} onChange={e => setMgMass(parseFloat(e.target.value))} aria-label=\"Mass of Mg\" />\n                    <Button onClick={calculateRatio}>Calculate Ratio</Button>\n                  </div>\n                  {ratio && <p className=\"mt-2 text-teal-700 font-semibold\">The mass ratio of MgO to Mg is {ratio}.</p>}\n                </div>\n\n                <div>\n                  <h4 className=\"font-semibold text-md mb-2\">Step 2: Predict the New Product Mass</h4>\n                  <p className=\"text-sm text-slate-600 mb-2\">New Product Mass = New Reactant Mass × Ratio</p>\n                  <div className=\"flex flex-col sm:flex-row items-center gap-2\">\n                    <Input type=\"number\" value={newMgMass} onChange={e => setNewMgMass(parseFloat(e.target.value))} aria-label=\"New mass of Mg\" />\n                    <span className=\"text-xl\">×</span>\n                    <Input type=\"number\" value={ratio ?? ''} readOnly aria-label=\"Calculated ratio\" placeholder=\"Ratio\" />\n                    <Button onClick={calculateFinalMass} disabled={!ratio}>Calculate Mass</Button>\n                  </div>\n                  {finalMass && <p className=\"mt-2 text-teal-700 font-semibold\">You will form {finalMass} g of Magnesium Oxide.</p>}\n                </div>\n\n                <Card className=\"bg-amber-50 border-amber-200\">\n                    <CardHeader>\n                        <CardTitle className=\"text-lg text-amber-900\">🧠 Metacognitive Check</CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"text-amber-800\">\n                        <p><strong>Does my answer make sense?</strong></p>\n                        <p>The new amount of Mg (7.5 g) is 2.5 times the original amount (3.0 g). So, the product should also be 2.5 times bigger.</p>\n                        <p>Check: 5.0 g MgO (original) × 2.5 = 12.5 g MgO. It matches! My answer is reasonable.</p>\n                    </CardContent>\n                </Card>\n\n              </div>\n            </AccordionContent>\n          </AccordionItem>\n        </Accordion>\n      </CardContent>\n    </Card>\n  )\n}\n```\n\n```tsx file=\"components/problem-solvers/transfer-problem-solver.tsx\"\n'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Input } from '@/components/ui/input'\nimport { Button } from '@/components/ui/button'\n\ninterface TransferProblemSolverProps {\n  problemTitle: string\n  problemText: string\n  correctAnswer: number\n  solutionSteps: React.ReactNode\n  explanation: string\n}\n\nexport function TransferProblemSolver({\n  problemTitle,\n  problemText,\n  correctAnswer,\n  solutionSteps,\n  explanation,\n}: TransferProblemSolverProps) {\n  const [userAnswer, setUserAnswer] = useState('')\n  const [feedback, setFeedback] = useState<'correct' | 'incorrect' | null>(null)\n  const [showSolution, setShowSolution] = useState(false)\n\n  const checkAnswer = () => {\n    const userAnswerNum = parseFloat(userAnswer)\n    if (Math.abs(userAnswerNum - correctAnswer) < 0.01) {\n      setFeedback('correct')\n    } else {\n      setFeedback('incorrect')\n    }\n    setShowSolution(false)\n  }\n\n  return (\n    <Card className=\"bg-white\">\n      <CardHeader>\n        <CardTitle>{problemTitle}</CardTitle>\n        <CardDescription>{problemText}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"flex flex-col sm:flex-row items-center gap-2 mb-4\">\n          <Input\n            type=\"number\"\n            value={userAnswer}\n            onChange={(e) => {\n              setUserAnswer(e.target.value)\n              setFeedback(null)\n            }}\n            placeholder=\"Your answer\"\n            aria-label=\"Your answer\"\n          />\n          <Button onClick={checkAnswer}>Check Answer</Button>\n        </div>\n        {feedback === 'correct' && (\n          <p className=\"text-green-600 font-semibold\">Correct! Great job applying the concept.</p>\n        )}\n        {feedback === 'incorrect' && (\n          <p className=\"text-red-600 font-semibold\">Not quite. Try rethinking your steps or check your calculations.</p>\n        )}\n        \n        <div className=\"mt-4\">\n            <Button variant=\"outline\" onClick={() => setShowSolution(!showSolution)}>\n                {showSolution ? 'Hide Solution' : 'Show Solution'}\n            </Button>\n        </div>\n        \n        {showSolution && (\n            <div className=\"mt-4 p-4 bg-slate-50 rounded-lg border\">\n                <h4 className=\"font-semibold mb-2\">Solution Breakdown:</h4>\n                <div className=\"space-y-2\">{solutionSteps}</div>\n                <hr className=\"my-4\"/>\n                <p className=\"text-sm text-slate-700\">{explanation}</p>\n            </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n```\n\n```tsx file=\"app/page.tsx\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Separator } from '@/components/ui/separator'\nimport { LabAssistant, BeakerIcon, AtomIcon } from '@/components/icons'\nimport { MainProblemSolver } from '@/components/problem-solvers/main-problem-solver'\nimport { TransferProblemSolver } from '@/components/problem-solvers/transfer-problem-solver'\n\nexport default function Home() {\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-12\">\n      {/* Section 1: Introduction & Context */}\n      <header className=\"text-center\">\n        <h1 className=\"text-4xl md:text-5xl font-bold tracking-tight text-slate-800\">\n          From Ratios to Reactions\n        </h1>\n        <p className=\"mt-4 text-lg text-slate-600\">\n          An Interactive Guide to Mastering Chemistry's Core Logic\n        </p>\n      </header>\n\n      <Card>\n        <CardHeader className=\"flex flex-col sm:flex-row items-center gap-4\">\n          <LabAssistant className=\"w-20 h-20 flex-shrink-0\" />\n          <div>\n            <CardTitle className=\"text-2xl\">Welcome to the Lab!</CardTitle>\n            <CardDescription>\n              Hi! I'm here to help you become a scientific thinker. Today, we'll explore a key idea in chemistry: ratios. It's like baking a cake—if you know 2 cups of flour make 1 cake, you can figure out how much flour you need for 3 cakes. Chemistry works the same way!\n            </CardDescription>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <h3 className=\"font-semibold text-lg text-slate-800 mb-2\">Today's Core Problem:</h3>\n          <p className=\"p-4 bg-amber-50 border border-amber-200 rounded-lg\">\n            In a lab, you synthesize magnesium oxide (MgO) by burning magnesium (Mg). An initial experiment shows that <strong>burning 3.0 g of magnesium produces 5.0 g of magnesium oxide</strong>. Your task is to figure out the mass ratio and predict how much MgO can be made from <strong>7.5 g of Mg</strong>.\n          </p>\n        </CardContent>\n      </Card>\n\n      <Separator />\n\n      {/* Section 2: CRA Approach */}\n      <section className=\"space-y-6\">\n        <h2 className=\"text-3xl font-bold text-center\">From Concrete to Abstract</h2>\n        \n        {/* Concrete */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Step 1: The Concrete (What you see)</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p>When you burn magnesium ribbon, you see a brilliant white light and are left with a white, powdery ash. This is a chemical reaction!</p>\n            <div className=\"mt-4 p-4 bg-slate-900 rounded-lg text-center text-white font-mono animate-pulse\">\n              [Bright flash of light!]\n            </div>\n          </CardContent>\n        </Card>\n        \n        {/* Representational */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Step 2: The Representational (What the atoms do)</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p>At the microscopic level, magnesium atoms are combining with oxygen molecules from the air to form a new substance, magnesium oxide.</p>\n            <div className=\"flex justify-center items-center gap-4 my-4 p-4 bg-slate-100 rounded-lg\">\n              <div className=\"flex items-center gap-2\">\n                <AtomIcon className=\"w-8 h-8 text-slate-500\" />\n                <span className=\"font-bold text-lg\">Mg</span>\n              </div>\n              <span className=\"text-2xl\">+</span>\n              <div className=\"flex items-center gap-2\">\n                <AtomIcon className=\"w-8 h-8 text-red-500\" />\n                <AtomIcon className=\"w-8 h-8 text-red-500\" />\n                <span className=\"font-bold text-lg\">O₂</span>\n              </div>\n              <span className=\"text-2xl\">→</span>\n              <div className=\"flex items-center gap-2\">\n                 <AtomIcon className=\"w-8 h-8 text-slate-500\" />\n                 <AtomIcon className=\"w-8 h-8 text-red-500\" />\n                <span className=\"font-bold text-lg\">MgO</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Abstract */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Step 3: The Abstract (The chemical shorthand)</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p>Chemists use a balanced chemical equation to represent this reaction symbolically. This is the abstract model.</p>\n            <div className=\"mt-2 p-4 bg-slate-100 rounded-lg text-center\">\n              <p className=\"font-mono text-xl tracking-wider\">\n                2 Mg (s) + O₂ (g) → 2 MgO (s)\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </section>\n\n      <Separator />\n\n      {/* Section 3: F.O.P.S. Strategy */}\n      <section>\n        <MainProblemSolver />\n      </section>\n      \n      <Separator />\n\n      {/* Section 4: Near-Transfer Problem */}\n      <section>\n          <h2 className=\"text-3xl font-bold text-center mb-6\">📌 Practice: Near Transfer</h2>\n          <TransferProblemSolver\n            problemTitle=\"Apply Your Skill: A New Reaction\"\n            problemText=\"A reaction produces 12.0 g of a compound when 3.0 g of reactant A is used. What is the mass ratio of product to reactant, and how much product will form from 7.5 g of reactant A?\"\n            correctAnswer={30}\n            solutionSteps={\n                <>\n                    <p><strong>1. Find Ratio:</strong> 12.0 g product / 3.0 g reactant = 4.0</p>\n                    <p><strong>2. Apply Ratio:</strong> 7.5 g reactant × 4.0 = 30.0 g product</p>\n                </>\n            }\n            explanation=\"This problem has the exact same structure as the main problem. You find a ratio from one set of data and apply it to a new situation. Recognizing this underlying structure is a key scientific skill!\"\n          />\n      </section>\n\n      {/* Section 5: Far-Transfer Problem */}\n      <section>\n          <h2 className=\"text-3xl font-bold text-center mb-6\">📌 Challenge: Far Transfer</h2>\n          <TransferProblemSolver\n            problemTitle=\"Connect the Concepts: Gas Pressure\"\n            problemText=\"A gas occupies 10.0 L at 2.0 atm of pressure. If the pressure is increased to 4.0 atm, what is the new volume? (Assume temperature is constant).\"\n            correctAnswer={5}\n            solutionSteps={\n                <>\n                    <p><strong>1. Identify Principle:</strong> This is Boyle's Law (P₁V₁ = P₂V₂), an inverse relationship.</p>\n                    <p><strong>2. Organize:</strong> P₁=2.0, V₁=10.0, P₂=4.0, V₂=?</p>\n                    <p><strong>3. Solve for V₂:</strong> V₂ = (P₁V₁) / P₂ = (2.0 atm × 10.0 L) / 4.0 atm = 5.0 L</p>\n                </>\n            }\n            explanation=\"This problem looks different (gases vs. mass), but the core thinking is the same! You're using a known relationship (P₁V₁ = constant) to find an unknown value. The first problem used a direct proportion (mass₂ = mass₁ × ratio), while this uses an inverse proportion. Both are forms of proportional reasoning, a fundamental tool in science.\"\n          />\n      </section>\n\n      <Separator />\n\n      {/* Section 6: Conclusion */}\n      <Card className=\"bg-teal-50 border-teal-200\">\n        <CardHeader>\n            <CardTitle className=\"text-2xl text-teal-900\">Congratulations!</CardTitle>\n        </CardHeader>\n        <CardContent className=\"text-teal-800 space-y-2\">\n            <p>You've done more than just solve a problem. You've practiced a powerful way of thinking that scientists use every day.</p>\n            <p><strong>Key Takeaways:</strong></p>\n            <ul className=\"list-disc list-inside\">\n                <li>The <strong>CRA method</strong> helps connect what you see to the atomic level and the symbols chemists use.</li>\n                <li>The <strong>F.O.P.S. strategy</strong> gives you a reliable roadmap for tackling complex problems.</li>\n                <li>True understanding comes from recognizing the same core logic (like ratios) in different scientific contexts (<strong>transfer</strong>).</li>\n            </ul>\n            <p className=\"font-semibold pt-2\">Keep practicing this way of thinking, and you'll be able to solve any problem that comes your way!</p>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n```"
}
{
  "content": "<Thinking>\nI will now begin to plan the educational chemistry webpage.\n\n### 1. Project Structure\n\nI'll structure the project using a modular approach with Next.js and the App Router. Components will be separated into their own files for clarity and reusability, keeping files lean as instructed.\n\n-   `app/layout.tsx`: Root layout, setting up the basic HTML structure, fonts, and Tailwind CSS.\n-   `app/page.tsx`: The main page component that will assemble the entire educational experience in a sequential, pedagogically sound flow.\n-   `components/ui/`: This directory will contain the shadcn/ui components that I will generate, such as `Card`, `Button`, `Accordion`, `Input`, and `Separator`.\n-   `components/chemistry-header.tsx`: A simple header for the page to give it a title.\n-   `components/problem-context.tsx`: Introduces the core problem within a relatable real-world or lab-based scenario, as requested. It will visually set the stage.\n-   `components/cra-model.tsx`: An interactive or visually segmented component to explain the problem using the Concrete-Representational-Abstract (CRA) approach.\n-   `components/fops-solver.tsx`: The main interactive component. It will be a client component (`\"use client\"`) that guides the student through the F.O.P.S. (Find, Organize, Plan, Solve) strategy with inputs and feedback.\n-   `components/transfer-tasks.tsx`: A component to present the Near-Transfer and Far-Transfer problems, likely using an `Accordion` to hide/reveal the solutions.\n-   `components/metacognition-prompts.tsx`: A section to display metacognitive questions, encouraging students to reflect on their learning process. This will likely use `Card` components.\n-   `lib/utils.ts`: Standard utility file for `cn` from shadcn/ui.\n-   `public/`: Will not be needed as I will use `lucide-react` for icons.\n\n### 2. Styling and Frameworks\n\n-   **Framework**: Next.js 14 with App Router.\n-   **Styling**: Tailwind CSS for utility-first styling and responsiveness.\n-   **UI Library**: `shadcn/ui`. I will use `Card`, `Button`, `Accordion`, `Input`, and `Separator` to build a clean, modern, and accessible interface.\n-   **Icons**: `lucide-react` will provide lightweight and consistent icons (e.g., beakers, lightbulbs, checkmarks) to enhance visual communication.\n-   **Responsiveness**: The design will be mobile-first, ensuring a seamless experience on all devices. Flexbox and grid layouts will be used to adapt the content to different screen sizes.\n\n### 3. Content and Pedagogical Flow on `page.tsx`\n\nThe main page will render components in this order to create a guided learning path:\n\n1.  **`ChemistryHeader`**: Title of the lesson.\n2.  **`ProblemContext`**:\n    -   **Scenario**: Start with a lab scenario: \"A junior chemist is synthesizing a new medicine.\" This provides context.\n    -   **Visuals**: Use icons of lab equipment like beakers and scales.\n    -   **Problem Statement**: Clearly present the main problem: \"A chemical reaction produces 12.0 g of a compound from 3.0 g of reactant A... How much product can be formed from 7.5 g of reactant A?\"\n3.  **`CRAModel`**:\n    -   **Concrete**: An analogy. \"Think of it like a recipe. The ratio of ingredients is fixed. If you double the flour, you double the bread.\" A visual of a scale balancing reactants and products.\n    -   **Representational**: A simple particle diagram showing 1 circle (Reactant A) yielding 4 squares (Product), visually representing the 1:4 mass ratio.\n    -   **Abstract**: Show the symbolic relationship: `Mass of Product / Mass of Reactant A = 4 / 1`.\n4.  **`FOPSSolver`**:\n    -   This will be an interactive, stateful component (`\"use client\"`).\n    -   **F (Find)**: Text explaining the core principle is the Law of Definite Proportions.\n    -   **O (Organize)**: A table where knowns are pre-filled and the unknown is highlighted.\n    -   **P (Plan)**: A text description of the plan: \"We will use the known ratio to set up a proportion to solve for the unknown mass of the product.\"\n    -   **S (Solve)**: An input field for the student to enter their answer. A button to check the answer, which provides immediate feedback (correct/incorrect) and shows the step-by-step calculation.\n5.  **`TransferTasks`**:\n    -   An `Accordion` with two items: \"Near-Transfer Problem\" and \"Far-Transfer Problem\".\n    -   **Near Problem**: Stoichiometry-based, but with different compounds and numbers (e.g., water formation from H₂ and O₂).\n    -   **Far Problem**: Gas laws (Boyle's Law: P₁V₁ = P₂V₂), which uses a similar proportional reasoning structure but in a completely different context.\n    -   Each accordion item will contain the problem and a hidden solution that can be revealed.\n6.  **`MetacognitionPrompts`**:\n    -   A section with `Card` components, each containing a reflective question like \"What was the core principle here?\" or \"How can I apply this ratio concept elsewhere?\". Icons like a brain or a lightbulb will be used.\n\n### 4. Accessibility and Best Practices\n\n-   Use semantic HTML (`<main>`, `<section>`, `<h2>`, etc.).\n-   Ensure all interactive elements are keyboard-navigable.\n-   Use `aria-label` for icon buttons where necessary.\n-   Provide clear focus states.\n-   Use `sr-only` class for text that should only be available to screen readers.\n\nThis comprehensive plan covers all user requirements, focusing on a structured, interactive, and transfer-oriented learning experience. I will now proceed to generate the code.\n\n</Thinking>\n\n```json\n{\n  \"project_name\": \"chemistry-learning-webpage\",\n  \"project_description\": \"An educational webpage that teaches a specific chemistry problem about mass ratios, designed to build scientific modeling and abstract reasoning skills. The page follows a structured pedagogical approach including Concrete-Representational-Abstract (CRA), the F.O.P.S. problem-solving method, and near/far transfer tasks.\",\n  \"scripts\": {\n    \"dev\": \"next dev\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"lint\": \"next lint\"\n  },\n  \"dependencies\": {\n    \"react\": \"^18\",\n    \"react-dom\": \"^18\",\n    \"next\": \"14.2.3\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"class-variance-authority\": \"^0.7.0\",\n    \"clsx\": \"^2.1.1\",\n    \"lucide-react\": \"^0.378.0\",\n    \"tailwind-merge\": \"^2.3.0\",\n    \"@radix-ui/react-accordion\": \"^1.1.2\",\n    \"@radix-ui/react-slot\": \"^1.0.2\",\n    \"framer-motion\": \"^11.2.6\"\n  },\n  \"devDependencies\": {\n    \"typescript\": \"^5\",\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^18\",\n    \"@types/react-dom\": \"^18\",\n    \"postcss\": \"^8\",\n    \"tailwindcss\": \"^3.4.1\",\n    \"eslint\": \"^8\",\n    \"eslint-config-next\": \"14.2.3\"\n  }\n}\n```\n\n```bash\n# First, run this command to install shadcn/ui and its dependencies.\n# Choose Default for configuration options.\n# You will be asked to install the following components:\n# Accordion, Button, Card, Input, Label, Separator. Select them by pressing spacebar and then enter.\nnpx shadcn-ui@latest init\n\n# After initialization, run this command to add the required components.\nnpx shadcn-ui@latest add accordion button card input label separator\n```\n\n```tsx file=\"app/layout.tsx\"\nimport type { Metadata } from \"next\";\nimport { Inter } from \"next/font/google\";\nimport \"./globals.css\";\nimport { cn } from \"@/lib/utils\";\n\nconst inter = Inter({ subsets: [\"latin\"], variable: \"--font-sans\" });\n\nexport const metadata: Metadata = {\n  title: \"Chemistry Problem Solver\",\n  description: \"An interactive page to learn about mass ratios in chemical reactions.\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body\n        className={cn(\n          \"min-h-screen bg-background font-sans antialiased\",\n          inter.variable\n        )}\n      >\n        {children}\n      </body>\n    </html>\n  );\n}\n```\n\n```tsx file=\"app/page.tsx\"\nimport ChemistryHeader from \"@/components/chemistry-header\";\nimport ProblemContext from \"@/components/problem-context\";\nimport CRAModel from \"@/components/cra-model\";\nimport FopsSolver from \"@/components/fops-solver\";\nimport TransferTasks from \"@/components/transfer-tasks\";\nimport MetacognitionPrompts from \"@/components/metacognition-prompts\";\nimport { Separator } from \"@/components/ui/separator\";\n\nexport default function Home() {\n  return (\n    <main className=\"flex flex-col items-center p-4 md:p-8 bg-slate-50 min-h-screen\">\n      <div className=\"w-full max-w-4xl space-y-12\">\n        <ChemistryHeader />\n        <ProblemContext />\n        <Separator />\n        <CRAModel />\n        <Separator />\n        <FopsSolver />\n        <Separator />\n        <TransferTasks />\n        <Separator />\n        <MetacognitionPrompts />\n      </div>\n    </main>\n  );\n}\n```\n\n```tsx file=\"components/chemistry-header.tsx\"\nimport { FlaskConical } from \"lucide-react\";\n\nexport default function ChemistryHeader() {\n  return (\n    <header className=\"text-center space-y-2\">\n      <div className=\"inline-flex items-center justify-center bg-emerald-100 text-emerald-700 rounded-full p-3\">\n        <FlaskConical className=\"h-8 w-8\" />\n      </div>\n      <h1 className=\"text-3xl md:text-4xl font-bold tracking-tight text-slate-800\">\n        Mastering Chemical Ratios\n      </h1>\n      <p className=\"text-lg text-slate-600 max-w-2xl mx-auto\">\n        Learn to solve chemistry problems by understanding the core principles of mass relationships in reactions.\n      </p>\n    </header>\n  );\n}\n```\n\n```tsx file=\"components/problem-context.tsx\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Scale, Beaker } from \"lucide-react\";\n\nexport default function ProblemContext() {\n  return (\n    <section>\n      <h2 className=\"text-2xl font-semibold text-slate-700 mb-4 text-center\">\n        1. Understanding the Context\n      </h2>\n      <Card className=\"bg-white shadow-md\">\n        <CardHeader>\n          <div className=\"flex items-center space-x-4\">\n            <Beaker className=\"h-8 w-8 text-blue-500\" />\n            <CardTitle className=\"text-xl text-slate-800\">The Lab Scenario: A Synthesis Reaction</CardTitle>\n          </div>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <p className=\"text-slate-600\">\n            Imagine you are a chemist in a lab trying to synthesize a new compound. You observe that a specific amount of your starting material (reactant A) consistently produces a specific amount of your final product. This relationship is key to scaling up your reaction efficiently.\n          </p>\n          <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4\">\n            <h3 className=\"font-semibold text-slate-800 flex items-center mb-2\">\n              <Scale className=\"h-5 w-5 mr-2 text-amber-600\" />\n              The Core Problem\n            </h3>\n            <p className=\"text-slate-700\">\n              A chemical reaction produces <strong className=\"font-bold\">12.0 g</strong> of a compound from <strong className=\"font-bold\">3.0 g</strong> of reactant A. The mass ratio of the product to reactant A is fixed at 4:1.\n            </p>\n            <p className=\"mt-2 font-medium text-slate-800\">\n              Your task: How much product can be formed from <strong className=\"font-bold\">7.5 g</strong> of reactant A?\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </section>\n  );\n}\n```\n\n```tsx file=\"components/cra-model.tsx\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Layers, Shapes, Sigma } from \"lucide-react\";\n\nexport default function CRAModel() {\n  return (\n    <section className=\"text-center\">\n      <h2 className=\"text-2xl font-semibold text-slate-700 mb-4\">\n        2. From Observation to Symbols (C-R-A)\n      </h2>\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {/* Concrete */}\n        <Card className=\"bg-white shadow-md text-left\">\n          <CardHeader>\n            <div className=\"flex items-center\">\n              <Layers className=\"h-6 w-6 mr-3 text-green-600\" />\n              <CardTitle className=\"text-lg text-slate-800\">Concrete: The Real World</CardTitle>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-slate-600\">\n              Think of baking. A recipe has a fixed ratio: 2 cups of flour for 1 cup of sugar. If you see you have 4 cups of flour, you intuitively know you need 2 cups of sugar. Chemical reactions work the same way, but with mass.\n            </p>\n          </CardContent>\n        </Card>\n\n        {/* Representational */}\n        <Card className=\"bg-white shadow-md text-left\">\n          <CardHeader>\n            <div className=\"flex items-center\">\n              <Shapes className=\"h-6 w-6 mr-3 text-orange-600\" />\n              <CardTitle className=\"text-lg text-slate-800\">Representational: Visual Models</CardTitle>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-slate-600 mb-2\">\n              We can model the mass relationship. For every 1 unit of mass of Reactant A, we get 4 units of Product.\n            </p>\n            <div className=\"flex items-center justify-center space-x-4 p-2 bg-slate-100 rounded\">\n                <div className=\"w-6 h-6 bg-blue-500 rounded-full\" aria-label=\"Reactant A\"></div>\n                <span className=\"text-2xl font-mono text-slate-500\">&rarr;</span>\n                <div className=\"flex space-x-1\">\n                    <div className=\"w-6 h-6 bg-emerald-500 rounded\" aria-label=\"Product unit 1\"></div>\n                    <div className=\"w-6 h-6 bg-emerald-500 rounded\" aria-label=\"Product unit 2\"></div>\n                    <div className=\"w-6 h-6 bg-emerald-500 rounded\" aria-label=\"Product unit 3\"></div>\n                    <div className=\"w-6 h-6 bg-emerald-500 rounded\" aria-label=\"Product unit 4\"></div>\n                </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Abstract */}\n        <Card className=\"bg-white shadow-md text-left\">\n          <CardHeader>\n            <div className=\"flex items-center\">\n              <Sigma className=\"h-6 w-6 mr-3 text-purple-600\" />\n              <CardTitle className=\"text-lg text-slate-800\">Abstract: Symbolic Math</CardTitle>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-slate-600\">\n              We express this relationship using a mathematical proportion. The ratio remains constant.\n            </p>\n            <div className=\"mt-2 p-3 bg-slate-100 rounded-md text-center\">\n                <code className=\"text-sm md:text-base font-mono text-purple-800\">\n                (12.0 g Product / 3.0 g A) = (X g Product / 7.5 g A)\n                </code>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  );\n}\n```\n\n```tsx file=\"components/fops-solver.tsx\"\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Label } from \"@/components/ui/label\";\nimport { CheckCircle, XCircle, Search, ListOrdered, ClipboardList, Calculator } from \"lucide-react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nexport default function FopsSolver() {\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [isCorrect, setIsCorrect] = useState<boolean | null>(null);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const correctAnswer = 30;\n\n  const checkAnswer = () => {\n    const answer = parseFloat(userAnswer);\n    setIsCorrect(Math.abs(answer - correctAnswer) < 0.01);\n    setShowFeedback(true);\n  };\n\n  const resetSolver = () => {\n    setUserAnswer(\"\");\n    setIsCorrect(null);\n    setShowFeedback(false);\n  };\n\n  const renderIcon = (Icon: React.ElementType) => <Icon className=\"h-6 w-6 mr-3 text-indigo-600\" />;\n\n  return (\n    <section>\n      <h2 className=\"text-2xl font-semibold text-slate-700 mb-4 text-center\">\n        3. Solving with the F.O.P.S. Method\n      </h2>\n      <Card className=\"bg-white shadow-md\">\n        <CardContent className=\"p-6\">\n          <Accordion type=\"single\" collapsible defaultValue=\"item-1\" className=\"w-full\">\n            <AccordionItem value=\"item-1\">\n              <AccordionTrigger className=\"text-lg font-medium hover:no-underline\">\n                <div className=\"flex items-center\">{renderIcon(Search)} F: Find the Principle</div>\n              </AccordionTrigger>\n              <AccordionContent className=\"text-slate-600 text-base pt-2\">\n                The core principle here is the <strong className=\"font-semibold text-slate-800\">Law of Definite Proportions</strong>. It states that a chemical compound always contains its component elements in fixed ratio (by mass). This means our 4:1 mass ratio is constant.\n              </AccordionContent>\n            </AccordionItem>\n            <AccordionItem value=\"item-2\">\n              <AccordionTrigger className=\"text-lg font-medium hover:no-underline\">\n                <div className=\"flex items-center\">{renderIcon(ListOrdered)} O: Organize Information</div>\n              </AccordionTrigger>\n              <AccordionContent>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full text-left text-sm mt-2\">\n                    <thead>\n                      <tr className=\"border-b\">\n                        <th className=\"p-2 font-semibold text-slate-700\">Quantity</th>\n                        <th className=\"p-2 font-semibold text-slate-700\">Value</th>\n                        <th className=\"p-2 font-semibold text-slate-700\">Type</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr className=\"border-b\">\n                        <td className=\"p-2 text-slate-600\">Initial Mass of Reactant A</td>\n                        <td className=\"p-2 text-slate-800 font-mono\">3.0 g</td>\n                        <td className=\"p-2 text-green-600\">Known</td>\n                      </tr>\n                      <tr className=\"border-b\">\n                        <td className=\"p-2 text-slate-600\">Initial Mass of Product</td>\n                        <td className=\"p-2 text-slate-800 font-mono\">12.0 g</td>\n                        <td className=\"p-2 text-green-600\">Known</td>\n                      </tr>\n                      <tr>\n                        <td className=\"p-2 text-slate-600\">New Mass of Reactant A</td>\n                        <td className=\"p-2 text-slate-800 font-mono\">7.5 g</td>\n                        <td className=\"p-2 text-green-600\">Known</td>\n                      </tr>\n                      <tr className=\"bg-amber-50\">\n                        <td className=\"p-2 text-slate-600 font-semibold\">New Mass of Product</td>\n                        <td className=\"p-2 text-slate-800 font-mono\">?</td>\n                        <td className=\"p-2 text-red-600 font-semibold\">Unknown</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </AccordionContent>\n            </AccordionItem>\n            <AccordionItem value=\"item-3\">\n              <AccordionTrigger className=\"text-lg font-medium hover:no-underline\">\n                <div className=\"flex items-center\">{renderIcon(ClipboardList)} P: Plan Your Approach</div>\n              </AccordionTrigger>\n              <AccordionContent className=\"text-slate-600 text-base pt-2 space-y-2\">\n                <p>1. Verify the mass ratio from the initial data: (12.0 g / 3.0 g) = 4.</p>\n                <p>2. Set up a proportion using this constant ratio and the new amount of reactant A to find the unknown product mass (X).</p>\n                <p><code className=\"bg-slate-100 p-1 rounded font-mono text-sm\">4 = X / 7.5 g</code></p>\n              </AccordionContent>\n            </AccordionItem>\n            <AccordionItem value=\"item-4\">\n              <AccordionTrigger className=\"text-lg font-medium hover:no-underline\">\n                <div className=\"flex items-center\">{renderIcon(Calculator)} S: Solve the Problem</div>\n              </AccordionTrigger>\n              <AccordionContent className=\"pt-4\">\n                <div className=\"space-y-4\">\n                  <Label htmlFor=\"answer\" className=\"font-semibold text-slate-700\">Enter your calculated mass of the product (in grams):</Label>\n                  <div className=\"flex flex-col sm:flex-row gap-2\">\n                    <Input \n                      id=\"answer\"\n                      type=\"number\"\n                      placeholder=\"e.g., 25.5\"\n                      value={userAnswer}\n                      onChange={(e) => setUserAnswer(e.target.value)}\n                      className=\"max-w-xs\"\n                      aria-describedby=\"feedback-message\"\n                    />\n                    <div className=\"flex gap-2\">\n                      <Button onClick={checkAnswer}>Check Answer</Button>\n                      <Button variant=\"outline\" onClick={resetSolver}>Reset</Button>\n                    </div>\n                  </div>\n\n                  <AnimatePresence>\n                    {showFeedback && (\n                      <motion.div\n                        initial={{ opacity: 0, y: -10 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        exit={{ opacity: 0, y: -10 }}\n                      >\n                        {isCorrect ? (\n                          <div id=\"feedback-message\" className=\"flex items-center p-3 rounded-md bg-green-100 text-green-800\">\n                            <CheckCircle className=\"h-5 w-5 mr-2\" />\n                            <div>\n                              <p className=\"font-semibold\">Correct! The answer is 30.0 g.</p>\n                              <p className=\"text-sm\">Calculation: 4 * 7.5 g = 30.0 g. Great job!</p>\n                            </div>\n                          </div>\n                        ) : (\n                          <div id=\"feedback-message\" className=\"flex items-center p-3 rounded-md bg-red-100 text-red-800\">\n                            <XCircle className=\"h-5 w-5 mr-2\" />\n                            <div>\n                              <p className=\"font-semibold\">Not quite. Try again!</p>\n                              <p className=\"text-sm\">Hint: Make sure you are multiplying the ratio (4) by the new reactant mass (7.5 g).</p>\n                            </div>\n                          </div>\n                        )}\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </div>\n              </AccordionContent>\n            </AccordionItem>\n          </Accordion>\n        </CardContent>\n      </Card>\n    </section>\n  );\n}\n```\n\n```tsx file=\"components/transfer-tasks.tsx\"\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\nimport { Telescope, Repeat } from \"lucide-react\";\n\nexport default function TransferTasks() {\n  return (\n    <section>\n      <h2 className=\"text-2xl font-semibold text-slate-700 mb-4 text-center\">\n        4. Transfer Your Knowledge\n      </h2>\n      <p className=\"text-center text-slate-600 mb-6 max-w-2xl mx-auto\">\n        True understanding means you can apply the same logic to new situations. Let's test your skills.\n      </p>\n      <Accordion type=\"single\" collapsible className=\"w-full\">\n        <AccordionItem value=\"item-1\">\n          <AccordionTrigger className=\"text-lg font-medium hover:no-underline\">\n            <div className=\"flex items-center text-left\">\n              <Repeat className=\"h-6 w-6 mr-3 text-cyan-600 flex-shrink-0\" />\n              Near-Transfer Problem (Same structure, different content)\n            </div>\n          </AccordionTrigger>\n          <AccordionContent className=\"pt-2\">\n            <div className=\"space-y-3 p-4 bg-slate-50 rounded-md\">\n              <p className=\"text-slate-700\">\n                <strong>Problem:</strong> The synthesis of ammonia (NH₃) from nitrogen (N₂) and hydrogen (H₂) is a key industrial process. Experimentally, it's found that <strong className=\"font-semibold\">14.0 g</strong> of nitrogen gas produces <strong className=\"font-semibold\">17.0 g</strong> of ammonia.\n              </p>\n              <p className=\"font-medium text-slate-800\">\n                How many grams of nitrogen are required to produce <strong className=\"font-semibold\">85.0 g</strong> of ammonia?\n              </p>\n              <details className=\"mt-2\">\n                <summary className=\"cursor-pointer font-semibold text-cyan-700 hover:underline\">\n                  Show Solution\n                </summary>\n                <div className=\"mt-2 p-3 bg-white border rounded-md text-slate-600 text-sm\">\n                    <p><strong>1. Find Ratio:</strong> Mass Ratio = (17.0 g NH₃ / 14.0 g N₂) ≈ 1.214</p>\n                    <p><strong>2. Plan:</strong> We need to find how much N₂ gives 85.0 g of NH₃. The logic is reversed. We divide by the ratio.</p>\n                    <p><strong>3. Solve:</strong> (85.0 g NH₃) / 1.214 ≈ <strong>70.0 g N₂</strong></p>\n                    <p className=\"mt-2 text-xs italic\">This problem uses the same proportional reasoning, but you solve for the reactant instead of the product.</p>\n                </div>\n              </details>\n            </div>\n          </AccordionContent>\n        </AccordionItem>\n        <AccordionItem value=\"item-2\">\n          <AccordionTrigger className=\"text-lg font-medium hover:no-underline\">\n            <div className=\"flex items-center text-left\">\n              <Telescope className=\"h-6 w-6 mr-3 text-fuchsia-600 flex-shrink-0\" />\n              Far-Transfer Problem (Different features, same core logic)\n            </div>\n          </AccordionTrigger>\n          <AccordionContent className=\"pt-2\">\n            <div className=\"space-y-3 p-4 bg-slate-50 rounded-md\">\n              <p className=\"text-slate-700\">\n                <strong>Problem:</strong> This problem isn't about reaction mass, but the logic is similar. A sample of gas in a flexible container occupies <strong className=\"font-semibold\">10.0 L</strong> at a pressure of <strong className=\"font-semibold\">2.0 atm</strong>. If the pressure is increased to <strong className=\"font-semibold\">4.0 atm</strong> at a constant temperature, what is the new volume?\n              </p>\n              <details className=\"mt-2\">\n                <summary className=\"cursor-pointer font-semibold text-fuchsia-700 hover:underline\">\n                  Show Solution\n                </summary>\n                <div className=\"mt-2 p-3 bg-white border rounded-md text-slate-600 text-sm\">\n                    <p><strong>1. Find Principle:</strong> This is Boyle's Law, which states that for a fixed amount of gas at constant temperature, pressure and volume are inversely proportional. The product of P and V is constant: P₁V₁ = P₂V₂.</p>\n                    <p><strong>2. Organize:</strong> P₁ = 2.0 atm, V₁ = 10.0 L, P₂ = 4.0 atm, V₂ = ?</p>\n                    <p><strong>3. Solve:</strong> (2.0 atm)(10.0 L) = (4.0 atm)(V₂). So, 20.0 = 4.0 * V₂. V₂ = 20.0 / 4.0 = <strong>5.0 L</strong></p>\n                    <p className=\"mt-2 text-xs italic\">This problem requires recognizing a constant relationship (P x V = constant), just as the main problem relied on a constant ratio (Mass Product / Mass Reactant = constant).</p>\n                </div>\n              </details>\n            </div>\n          </AccordionContent>\n        </AccordionItem>\n      </Accordion>\n    </section>\n  );\n}\n```\n\n```tsx file=\"components/metacognition-prompts.tsx\"\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { BrainCircuit, Lightbulb, Recycle } from \"lucide-react\";\n\nconst prompts = [\n  {\n    icon: BrainCircuit,\n    text: \"What was the core chemical principle that allowed me to solve this problem?\",\n    color: \"text-sky-600\",\n  },\n  {\n    icon: Lightbulb,\n    text: \"How did visualizing the problem with models (the C-R-A approach) help me understand the abstract math?\",\n    color: \"text-amber-600\",\n  },\n  {\n    icon: Recycle,\n    text: \"Where else (in chemistry or other subjects) have I seen this idea of a constant ratio or proportion?\",\n    color: \"text-emerald-600\",\n  },\n];\n\nexport default function MetacognitionPrompts() {\n  return (\n    <section>\n      <h2 className=\"text-2xl font-semibold text-slate-700 mb-4 text-center\">\n        5. Strengthen Your Thinking\n      </h2>\n      <p className=\"text-center text-slate-600 mb-6 max-w-2xl mx-auto\">\n        Great scientists don't just find answers; they think about how they think. Reflect on these questions to build stronger problem-solving skills.\n      </p>\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {prompts.map((prompt, index) => (\n          <Card key={index} className=\"bg-white shadow-md\">\n            <CardContent className=\"p-6 flex flex-col items-center text-center\">\n              <prompt.icon className={`h-10 w-10 mb-4 ${prompt.color}`} />\n              <p className=\"text-slate-700 font-medium\">{prompt.text}</p>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    </section>\n  );\n}\n```\n\n```tsx file=\"lib/utils.ts\"\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n```"
}
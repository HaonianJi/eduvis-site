{
  "content": "<Thinking>\nI will begin by planning the structure and content of the educational webpage based on the user's detailed instructional design specifications.\n\n### 1. Project Structure & File Organization\n\n*   **Framework**: Next.js with TypeScript and Tailwind CSS.\n*   **Routing**: App Router. The entire lesson will be on a single page: `app/page.tsx`.\n*   **Components**: I will use `shadcn/ui` for UI components like `Card`, `Accordion`, `Tabs`, and `Button` to create a clean and structured layout. This requires initializing `shadcn/ui` and adding these specific components. The main page will be broken down into smaller, logical React components within the `app/page.tsx` file to keep the code organized and readable.\n    *   `ChemistryLessonPage`: The main container component.\n    *   `Introduction`: To set the real-world context (making s'mores and a lab scenario).\n    *   `TheCoreProblem`: States the specific chemistry problem to be solved.\n    *   `ConceptualBuildup`: Implements the Concrete-Representational-Abstract (CRA) approach.\n    *   `ProblemSolvingFramework`: Explains and applies the F.O.P.S. strategy.\n    *   `TransferTasks`: A section with tabs for the Near-Transfer and Far-Transfer problems.\n    *   `MetacognitionCheck`: An accordion component for metacognitive prompts.\n    *   `Conclusion`: A brief summary of the learned concepts.\n*   **Styling**: Tailwind CSS for all styling. I'll use a neutral color scheme (e.g., slate gray) with a warm accent color (e.g., amber or orange) for highlights, avoiding blues and indigos as instructed. The design will be responsive.\n*   **Icons**: I will use the `lucide-react` library for icons to visually support the content (e.g., beaker, lightbulb, brain).\n\n### 2. Chemistry Problem & Content Plan\n\nI need to create a specific chemistry problem that is foundational and suitable for this pedagogical approach. A **limiting reactant stoichiometry problem** is perfect because it's a common challenge for students and maps well to the CRA and F.O.P.S. models.\n\n*   **Core Problem**: The synthesis of water from hydrogen and oxygen gas (2H₂ + O₂ → 2H₂O).\n    *   **Scenario**: A lab technician needs to produce a specific amount of high-purity water for an experiment but has limited quantities of hydrogen and oxygen gas.\n    *   **Question**: \"If you have 10.0 grams of hydrogen (H₂) and 64.0 grams of oxygen (O₂), which is the limiting reactant, and what is the maximum mass of water (H₂O) that can be produced?\"\n\n### 3. Implementing the Instructional Structure\n\n1.  **Context (Introduction Component)**:\n    *   Start with a relatable, concrete analogy: making s'mores. \"You have 10 graham crackers, 3 chocolate bars, and a big bag of marshmallows. How many s'mores can you make if the recipe is 2 crackers + 1 chocolate bar + 1 marshmallow?\" This intuitively introduces the concept of a \"limiting ingredient.\"\n    *   Transition to the chemistry lab scenario with the lab technician, creating a meaningful context. I'll use a simple illustration made with JSX and Tailwind to show the gas cylinders.\n\n2.  **Information Expression (ConceptualBuildup Component - CRA)**:\n    *   **Concrete**: Refer back to the s'mores analogy. The physical act of running out of chocolate bars is the concrete experience.\n    *   **Representational**:\n        *   Show particle-level diagrams of H₂ and O₂ molecules in a \"reaction vessel\" (a simple div). Visually show that the O₂ molecules are used up while H₂ molecules are left over.\n        *   Introduce the balanced chemical equation: `2H₂ + O₂ → 2H₂O`. Explain what the coefficients mean (the \"recipe\").\n    *   **Abstract**: Transition to the symbolic calculations: moles, molar mass, and stoichiometric ratios. This is where the math happens.\n\n3.  **Scientific Model Building (ProblemSolvingFramework Component - F.O.P.S.)**:\n    *   Explicitly break down the solution using the F.O.P.S. strategy.\n    *   **F (Find)**: The core chemical principle is stoichiometry and identifying the limiting reactant.\n    *   **O (Organize)**: Create a table to organize the given information: mass, molar mass, and a placeholder for moles for both reactants.\n    *   **P (Plan)**: List the steps:\n        1.  Convert grams of each reactant to moles.\n        2.  Use the mole ratio from the balanced equation to determine how much product each reactant *could* make.\n        3.  The reactant that produces the *least* amount of product is the limiting reactant.\n        4.  Use the moles of product from the limiting reactant to calculate the final mass.\n    *   **S (Solve)**: Show the step-by-step calculations with clear explanations.\n\n4.  **Transfer Tasks (TransferTasks Component)**:\n    *   Use `Tabs` from `shadcn/ui` to separate the problems.\n    *   **Near-Transfer Problem**:\n        *   **Context**: Synthesis of ammonia (Haber-Bosch process).\n        *   **Problem**: \"In an industrial reactor, 28.0 g of nitrogen (N₂) is mixed with 9.0 g of hydrogen (H₃). What is the maximum amount of ammonia (NH₃) that can be produced? (N₂ + 3H₂ → 2NH₃)\".\n        *   **Guidance**: \"Notice this problem has the same *structure* as our water problem. You have two ingredients and need to find out which one runs out first.\"\n    *   **Far-Transfer Problem**:\n        *   **Context**: A non-chemistry scenario that uses the same core logic of a limiting factor. Baking is a perfect analogy.\n        *   **Problem**: \"You are baking cupcakes. The recipe calls for 200g of flour, 150g of sugar, and 2 eggs for a batch of 12 cupcakes. You have 1 kg of flour, 500g of sugar, and 7 eggs in your pantry. What is the maximum number of cupcakes you can bake?\"\n        *   **Guidance**: \"This isn't a chemistry problem, but the *thinking process* is identical. Find the 'limiting ingredient' to determine your maximum 'yield'.\"\n\n5.  **Metacognitive Support (MetacognitionCheck Component)**:\n    *   Use an `Accordion` to create a \"Metacognition Corner.\"\n    *   **Prompts**:\n        *   \"What was the core concept of this lesson?\"\n        *   \"How does the s'mores analogy connect to the chemical reaction?\"\n        *   \"What is the most important step in the F.O.P.S. strategy for this type of problem? Why?\"\n        *   \"What's a common mistake someone might make when solving this? (e.g., forgetting the mole ratio, using the wrong molar mass).\"\n        *   \"How can you check if your final answer is reasonable?\"\n\n### 4. Code Generation Plan\n\n1.  Set up a new Next.js project with the specified `create-next-app` command.\n2.  Initialize `shadcn/ui` and add the necessary components: `card`, `button`, `accordion`, `tabs`.\n3.  Clear the default `app/page.tsx` and `globals.css` content.\n4.  In `app/page.tsx`, create the main `ChemistryLessonPage` component.\n5.  Inside `ChemistryLessonPage`, build out each of the planned functional components (`Introduction`, `TheCoreProblem`, etc.) using JSX, Tailwind CSS, and the imported `shadcn/ui` components.\n6.  Populate each component with the planned educational content, explanations, diagrams, and problems.\n7.  Ensure all interactive components (`Tabs`, `Accordion`) are placed within a component that has the `\"use client\"` directive at the top, or the component itself has it. The `TransferTasks` and `MetacognitionCheck` components will require this.\n8.  Add appropriate accessibility attributes and use semantic HTML (`<main>`, `<section>`, `<h2>`, etc.).\n9.  Final check for responsiveness and adherence to all instructional design requirements.\n\nThis structured plan ensures that the final generated code will be a comprehensive, instructionally sound, and engaging webpage that fulfills all aspects of the user's request."
}